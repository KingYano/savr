{"file":"index-CaNeARi_.js","mappings":"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","names":["error"],"sources":["../../../../components/ui/dialog/Dialog.vue","../../../shadcn-nuxt/utils.ts","../../../../components/ui/dialog/DialogContent.vue","../../../../components/ui/dialog/DialogFooter.vue","../../../../components/ui/dialog/DialogHeader.vue","../../../../components/ui/dialog/DialogTitle.vue","../../../../components/ui/button/Button.vue","../../../../components/ui/button/index.ts","../../../../components/ui/input/Input.vue","../../../../components/ui/alert/Alert.vue","../../../../components/ui/alert/AlertDescription.vue","../../../../components/ui/alert/index.ts","../../../../utils/imageValidator.ts","../../../../utils/imageCompressor.ts","../../../../composables/useImageUpload.ts","../../../../components/add-movement-dialog/AddMovementDialog.vue","../../../../utils/formatters.ts","../../../../stores/movements.ts","../../../../stores/finance.ts","../../../../utils/database.ts","../../../../composables/useFinance.ts","../../../../pages/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { DialogRoot, type DialogRootEmits, type DialogRootProps, useForwardPropsEmits } from 'reka-ui'\n\nconst props = defineProps<DialogRootProps>()\nconst emits = defineEmits<DialogRootEmits>()\n\nconst forwarded = useForwardPropsEmits(props, emits)\n</script>\n\n<template>\n  <DialogRoot v-bind=\"forwarded\">\n    <slot />\n  </DialogRoot>\n</template>\n","import { type ClassValue, clsx } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","<script setup lang=\"ts\">\nimport { cn } from '@/lib/utils'\nimport { X } from 'lucide-vue-next'\nimport {\n  DialogClose,\n  DialogContent,\n  type DialogContentEmits,\n  type DialogContentProps,\n  DialogOverlay,\n  DialogPortal,\n  useForwardPropsEmits,\n} from 'reka-ui'\nimport { computed, type HTMLAttributes } from 'vue'\n\nconst props = defineProps<DialogContentProps & { class?: HTMLAttributes['class'] }>()\nconst emits = defineEmits<DialogContentEmits>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <DialogPortal>\n    <DialogOverlay\n      class=\"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\"\n    />\n    <DialogContent\n      v-bind=\"forwarded\"\n      :class=\"\n        cn(\n          'fixed left-1/2 top-1/2 z-50 grid w-full max-w-lg -translate-x-1/2 -translate-y-1/2 gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg',\n          props.class,\n        )\"\n    >\n      <slot />\n\n      <DialogClose\n        class=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\"\n      >\n        <X class=\"w-4 h-4\" />\n        <span class=\"sr-only\">Close</span>\n      </DialogClose>\n    </DialogContent>\n  </DialogPortal>\n</template>\n","<script setup lang=\"ts\">\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<{ class?: HTMLAttributes['class'] }>()\n</script>\n\n<template>\n  <div\n    :class=\"\n      cn(\n        'flex flex-col-reverse sm:flex-row sm:justify-end sm:gap-x-2',\n        props.class,\n      )\n    \"\n  >\n    <slot />\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<{\n  class?: HTMLAttributes['class']\n}>()\n</script>\n\n<template>\n  <div\n    :class=\"cn('flex flex-col gap-y-1.5 text-center sm:text-left', props.class)\"\n  >\n    <slot />\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { cn } from '@/lib/utils'\nimport { DialogTitle, type DialogTitleProps, useForwardProps } from 'reka-ui'\nimport { computed, type HTMLAttributes } from 'vue'\n\nconst props = defineProps<DialogTitleProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <DialogTitle\n    v-bind=\"forwardedProps\"\n    :class=\"\n      cn(\n        'text-lg font-semibold leading-none tracking-tight',\n        props.class,\n      )\n    \"\n  >\n    <slot />\n  </DialogTitle>\n</template>\n","<script setup lang=\"ts\">\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/lib/utils'\nimport { Primitive, type PrimitiveProps } from 'reka-ui'\nimport { type ButtonVariants, buttonVariants } from '.'\n\ninterface Props extends PrimitiveProps {\n  variant?: ButtonVariants['variant']\n  size?: ButtonVariants['size']\n  class?: HTMLAttributes['class']\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  as: 'button',\n})\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :class=\"cn(buttonVariants({ variant, size }), props.class)\"\n  >\n    <slot />\n  </Primitive>\n</template>\n","import { cva, type VariantProps } from 'class-variance-authority'\n\nexport { default as Button } from './Button.vue'\n\nexport const buttonVariants = cva(\n  'inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground shadow hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90',\n        outline:\n          'border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n      },\n      size: {\n        default: 'h-9 px-4 py-2',\n        xs: 'h-7 rounded px-2',\n        sm: 'h-8 rounded-md px-3 text-xs',\n        lg: 'h-10 rounded-md px-8',\n        icon: 'h-9 w-9',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n)\n\nexport type ButtonVariants = VariantProps<typeof buttonVariants>\n","<script setup lang=\"ts\">\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/lib/utils'\nimport { useVModel } from '@vueuse/core'\n\nconst props = defineProps<{\n  defaultValue?: string | number\n  modelValue?: string | number\n  class?: HTMLAttributes['class']\n}>()\n\nconst emits = defineEmits<{\n  (e: 'update:modelValue', payload: string | number): void\n}>()\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  passive: true,\n  defaultValue: props.defaultValue,\n})\n</script>\n\n<template>\n  <input v-model=\"modelValue\" :class=\"cn('flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50', props.class)\">\n</template>\n","<script setup lang=\"ts\">\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/lib/utils'\nimport { type AlertVariants, alertVariants } from '.'\n\nconst props = defineProps<{\n  class?: HTMLAttributes['class']\n  variant?: AlertVariants['variant']\n}>()\n</script>\n\n<template>\n  <div :class=\"cn(alertVariants({ variant }), props.class)\" role=\"alert\">\n    <slot />\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<{\n  class?: HTMLAttributes['class']\n}>()\n</script>\n\n<template>\n  <div :class=\"cn('text-sm [&_p]:leading-relaxed', props.class)\">\n    <slot />\n  </div>\n</template>\n","import { cva, type VariantProps } from 'class-variance-authority'\n\nexport { default as Alert } from './Alert.vue'\nexport { default as AlertDescription } from './AlertDescription.vue'\nexport { default as AlertTitle } from './AlertTitle.vue'\n\nexport const alertVariants = cva(\n  'relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7',\n  {\n    variants: {\n      variant: {\n        default: 'bg-background text-foreground',\n        destructive:\n          'border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n)\n\nexport type AlertVariants = VariantProps<typeof alertVariants>\n","export interface ImageValidationResult {\n  isValid: boolean;\n  error?: string;\n  file?: File;\n}\n\nexport interface ImageValidationOptions {\n  maxSizeBytes: number;\n  allowedTypes: string[];\n  maxWidth?: number;\n  maxHeight?: number;\n}\n\nexport const DEFAULT_IMAGE_OPTIONS: ImageValidationOptions = {\n  maxSizeBytes: 2 * 1024 * 1024, // 2MB\n  allowedTypes: ['image/jpeg', 'image/png', 'image/webp'],\n  maxWidth: 1920,\n  maxHeight: 1080\n};\n\nexport async function validateImageFile(\n  file: File, \n  options: Partial<ImageValidationOptions> = {}\n): Promise<ImageValidationResult> {\n  const opts = { ...DEFAULT_IMAGE_OPTIONS, ...options };\n\n  // Vérification de la taille\n  if (file.size > opts.maxSizeBytes) {\n    return {\n      isValid: false,\n      error: `Fichier trop volumineux. Maximum ${Math.round(opts.maxSizeBytes / 1024 / 1024)}MB autorisé.`\n    };\n  }\n\n  // Vérification du type MIME réel\n  const actualMimeType = await getActualMimeType(file);\n  if (!opts.allowedTypes.includes(actualMimeType)) {\n    return {\n      isValid: false,\n      error: `Type de fichier non autorisé. Types acceptés: ${opts.allowedTypes.join(', ')}`\n    };\n  }\n\n  // Vérification des dimensions si spécifiées\n  if (opts.maxWidth || opts.maxHeight) {\n    try {\n      const dimensions = await getImageDimensions(file);\n      if (opts.maxWidth && dimensions.width > opts.maxWidth) {\n        return {\n          isValid: false,\n          error: `Largeur trop importante. Maximum ${opts.maxWidth}px autorisé.`\n        };\n      }\n      if (opts.maxHeight && dimensions.height > opts.maxHeight) {\n        return {\n          isValid: false,\n          error: `Hauteur trop importante. Maximum ${opts.maxHeight}px autorisé.`\n        };\n      }\n    } catch (error) {\n      return {\n        isValid: false,\n        error: 'Impossible de lire les dimensions de l\\'image.'\n      };\n    }\n  }\n\n  return {\n    isValid: true,\n    file\n  };\n}\n\nasync function getActualMimeType(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      const arr = new Uint8Array(reader.result as ArrayBuffer);\n      \n      // Signatures de fichiers (magic numbers)\n      const signatures = {\n        'image/jpeg': [0xFF, 0xD8, 0xFF],\n        'image/png': [0x89, 0x50, 0x4E, 0x47],\n        'image/webp': [0x52, 0x49, 0x46, 0x46]\n      };\n\n      for (const [mimeType, signature] of Object.entries(signatures)) {\n        if (signature.every((byte, index) => arr[index] === byte)) {\n          resolve(mimeType);\n          return;\n        }\n      }\n\n      // Si aucune signature reconnue, fallback sur le type déclaré\n      resolve(file.type);\n    };\n    reader.onerror = () => reject(new Error('Erreur lecture fichier'));\n    reader.readAsArrayBuffer(file.slice(0, 12)); // Lire seulement les premiers bytes\n  });\n}\n\nasync function getImageDimensions(file: File): Promise<{ width: number; height: number }> {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => {\n      resolve({\n        width: img.naturalWidth,\n        height: img.naturalHeight\n      });\n    };\n    img.onerror = () => reject(new Error('Impossible de charger l\\'image'));\n    img.src = URL.createObjectURL(file);\n  });\n}","export interface CompressionOptions {\n  maxWidth: number;\n  maxHeight: number;\n  quality: number;\n  format: 'webp' | 'jpeg' | 'png';\n  maintainAspectRatio: boolean;\n}\n\nexport const DEFAULT_COMPRESSION_OPTIONS: CompressionOptions = {\n  maxWidth: 800,\n  maxHeight: 600,\n  quality: 0.8,\n  format: 'webp',\n  maintainAspectRatio: true\n};\n\nexport interface CompressionResult {\n  compressedFile: Blob;\n  dataUrl: string;\n  originalSize: number;\n  compressedSize: number;\n  compressionRatio: number;\n}\n\nexport async function compressImage(\n  file: File,\n  options: Partial<CompressionOptions> = {}\n): Promise<CompressionResult> {\n  const opts = { ...DEFAULT_COMPRESSION_OPTIONS, ...options };\n  \n  // Vérifier le support WebP\n  if (opts.format === 'webp' && !await supportsWebP()) {\n    opts.format = 'jpeg';\n  }\n\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    \n    img.onload = () => {\n      try {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        \n        if (!ctx) {\n          reject(new Error('Impossible de créer le contexte canvas'));\n          return;\n        }\n\n        // Calculer les nouvelles dimensions\n        const { width, height } = calculateDimensions(\n          img.naturalWidth,\n          img.naturalHeight,\n          opts.maxWidth,\n          opts.maxHeight,\n          opts.maintainAspectRatio\n        );\n\n        canvas.width = width;\n        canvas.height = height;\n\n        // Améliorer la qualité de redimensionnement\n        ctx.imageSmoothingEnabled = true;\n        ctx.imageSmoothingQuality = 'high';\n\n        // Dessiner l'image redimensionnée\n        ctx.drawImage(img, 0, 0, width, height);\n\n        // Convertir en blob avec compression\n        canvas.toBlob(\n          (blob) => {\n            if (!blob) {\n              reject(new Error('Erreur lors de la compression'));\n              return;\n            }\n\n            // Générer l'URL de données\n            const reader = new FileReader();\n            reader.onload = () => {\n              const dataUrl = reader.result as string;\n              const compressionRatio = ((file.size - blob.size) / file.size) * 100;\n\n              resolve({\n                compressedFile: blob,\n                dataUrl,\n                originalSize: file.size,\n                compressedSize: blob.size,\n                compressionRatio: Math.round(compressionRatio)\n              });\n            };\n            reader.onerror = () => reject(new Error('Erreur génération dataURL'));\n            reader.readAsDataURL(blob);\n          },\n          `image/${opts.format}`,\n          opts.quality\n        );\n\n        // Nettoyer\n        URL.revokeObjectURL(img.src);\n      } catch (error) {\n        reject(error);\n      }\n    };\n\n    img.onerror = () => reject(new Error('Impossible de charger l\\'image'));\n    img.src = URL.createObjectURL(file);\n  });\n}\n\nfunction calculateDimensions(\n  originalWidth: number,\n  originalHeight: number,\n  maxWidth: number,\n  maxHeight: number,\n  maintainAspectRatio: boolean\n): { width: number; height: number } {\n  if (!maintainAspectRatio) {\n    return { width: maxWidth, height: maxHeight };\n  }\n\n  const aspectRatio = originalWidth / originalHeight;\n\n  let width = originalWidth;\n  let height = originalHeight;\n\n  // Redimensionner seulement si nécessaire\n  if (width > maxWidth || height > maxHeight) {\n    if (width / maxWidth > height / maxHeight) {\n      width = maxWidth;\n      height = width / aspectRatio;\n    } else {\n      height = maxHeight;\n      width = height * aspectRatio;\n    }\n  }\n\n  return {\n    width: Math.round(width),\n    height: Math.round(height)\n  };\n}\n\nasync function supportsWebP(): Promise<boolean> {\n  return new Promise((resolve) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    \n    canvas.toBlob(\n      (blob) => resolve(!!blob),\n      'image/webp'\n    );\n  });\n}\n\nexport function formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 B';\n  \n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(1))} ${sizes[i]}`;\n}","import { ref } from 'vue';\nimport { validateImageFile, type ImageValidationResult } from '~/utils/imageValidator';\nimport { compressImage, type CompressionResult, formatFileSize } from '~/utils/imageCompressor';\n\nexport interface UseImageUploadOptions {\n  maxSizeBytes?: number;\n  allowedTypes?: string[];\n  maxWidth?: number;\n  maxHeight?: number;\n  compressionEnabled?: boolean;\n}\n\nexport interface ImageUploadState {\n  file: File | null;\n  previewUrl: string;\n  fileName: string;\n  isUploading: boolean;\n  error: string;\n  compressionInfo: string;\n}\n\nexport function useImageUpload(options: UseImageUploadOptions = {}) {\n  const state = ref<ImageUploadState>({\n    file: null,\n    previewUrl: '',\n    fileName: '',\n    isUploading: false,\n    error: '',\n    compressionInfo: ''\n  });\n\n  const resetState = () => {\n    if (state.value.previewUrl && state.value.previewUrl.startsWith('blob:')) {\n      URL.revokeObjectURL(state.value.previewUrl);\n    }\n    \n    state.value = {\n      file: null,\n      previewUrl: '',\n      fileName: '',\n      isUploading: false,\n      error: '',\n      compressionInfo: ''\n    };\n  };\n\n  const handleFileUpload = async (file: File): Promise<boolean> => {\n    state.value.isUploading = true;\n    state.value.error = '';\n    state.value.compressionInfo = '';\n\n    try {\n      // Validation du fichier\n      const validationResult: ImageValidationResult = await validateImageFile(file, {\n        maxSizeBytes: options.maxSizeBytes,\n        allowedTypes: options.allowedTypes,\n        maxWidth: options.maxWidth,\n        maxHeight: options.maxHeight\n      });\n\n      if (!validationResult.isValid) {\n        state.value.error = validationResult.error || 'Fichier invalide';\n        state.value.isUploading = false;\n        return false;\n      }\n\n      let finalFile = file;\n      let previewUrl = '';\n\n      // Compression si activée\n      if (options.compressionEnabled !== false) {\n        try {\n          const compressionResult: CompressionResult = await compressImage(file, {\n            maxWidth: 800,\n            maxHeight: 600,\n            quality: 0.8\n          });\n\n          finalFile = new File([compressionResult.compressedFile], file.name, {\n            type: compressionResult.compressedFile.type,\n            lastModified: Date.now()\n          });\n\n          previewUrl = compressionResult.dataUrl;\n\n          if (compressionResult.compressionRatio > 0) {\n            state.value.compressionInfo = `Compression: ${formatFileSize(compressionResult.originalSize)} → ${formatFileSize(compressionResult.compressedSize)} (-${compressionResult.compressionRatio}%)`;\n          }\n        } catch (compressionError) {\n          console.warn('Compression échouée, utilisation du fichier original:', compressionError);\n          previewUrl = URL.createObjectURL(file);\n        }\n      } else {\n        previewUrl = URL.createObjectURL(file);\n      }\n\n      // Mettre à jour l'état\n      state.value.file = finalFile;\n      state.value.previewUrl = previewUrl;\n      state.value.fileName = file.name;\n      state.value.isUploading = false;\n\n      return true;\n    } catch (error) {\n      state.value.error = error instanceof Error ? error.message : 'Erreur lors du traitement du fichier';\n      state.value.isUploading = false;\n      return false;\n    }\n  };\n\n  const getDataUrl = async (): Promise<string> => {\n    if (!state.value.file) {\n      throw new Error('Aucun fichier sélectionné');\n    }\n\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result as string);\n      reader.onerror = () => reject(new Error('Erreur lecture fichier'));\n      reader.readAsDataURL(state.value.file);\n    });\n  };\n\n  // Cleanup automatique\n  onUnmounted(() => {\n    resetState();\n  });\n\n  return {\n    state: readonly(state),\n    handleFileUpload,\n    resetState,\n    getDataUrl\n  };\n}","<template>\n  <Dialog :open=\"isOpen\" @update:open=\"$emit('update:isOpen', $event)\">\n    <DialogContent :class=\"[\n      'p-0 w-full sm:max-w-[500px] max-h-[90vh] overflow-y-auto',\n      isDarkMode ? 'bg-gray-900 border-gray-800' : 'bg-white border-slate-200'\n    ]\">\n      <DialogHeader :class=\"[\n        'sticky top-0 z-10 p-4 sm:p-6 border-b',\n        isDarkMode ? 'border-gray-800 bg-gray-900' : 'border-slate-200 bg-white'\n      ]\">\n        <DialogTitle :class=\"[\n          'text-xl sm:text-2xl font-semibold',\n          isDarkMode ? 'text-white' : 'text-slate-900'\n        ]\">\n          Ajouter un mouvement\n        </DialogTitle>\n      </DialogHeader>\n\n      <div class=\"p-4 sm:p-6 space-y-4 sm:space-y-6\">\n        <div class=\"space-y-2 sm:space-y-3\">\n          <label :class=\"[\n            'text-sm font-medium',\n            isDarkMode ? 'text-white' : 'text-slate-900'\n          ]\">\n            Type de mouvement\n          </label>\n          <div class=\"grid grid-cols-2 gap-2\">\n            <button\n                type=\"button\"\n                :class=\"[\n                'w-full px-3 py-2 rounded-md text-sm sm:text-base',\n                newMovement.type === 'expense'\n                  ? 'bg-red-500 hover:bg-red-600 text-white'\n                  : 'border bg-slate-100',\n\n              ]\"\n                @click=\"newMovement.type = 'expense'\"\n            >\n              Dépense\n            </button>\n            <button\n                type=\"button\"\n                :class=\"[\n                'w-full px-3 py-2 rounded-md text-sm sm:text-base',\n                newMovement.type === 'income'\n                  ? 'bg-emerald-500 hover:bg-emerald-600 text-white'\n                  : 'border bg-slate-100'\n              ]\"\n                @click=\"newMovement.type = 'income'\"\n            >\n              Revenu\n            </button>\n          </div>\n        </div>\n\n        <div class=\"space-y-3 sm:space-y-4\">\n          <div class=\"space-y-1 sm:space-y-2\">\n            <label :class=\"isDarkMode ? 'text-white' : 'text-slate-900'\">Nom</label>\n            <Input\n                v-model=\"newMovement.name\"\n                type=\"text\"\n                placeholder=\"Ex: Loyer, Salaire...\"\n                :class=\"[\n                isDarkMode ? 'bg-gray-800 border-gray-700 text-white' : 'bg-white border-slate-200'\n              ]\"\n            />\n          </div>\n\n          <div class=\"space-y-1 sm:space-y-2\">\n            <label :class=\"isDarkMode ? 'text-white' : 'text-slate-900'\">Montant</label>\n            <div class=\"relative\">\n              <Input\n                  v-model=\"newMovement.amount\"\n                  type=\"number\"\n                  placeholder=\"0.00\"\n                  class=\"pl-8\"\n                  :class=\"[\n                  isDarkMode ? 'bg-gray-800 border-gray-700 text-white' : 'bg-white border-slate-200'\n                ]\"\n              />\n              <span class=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-500\">€</span>\n            </div>\n          </div>\n\n          <div class=\"space-y-1 sm:space-y-2\">\n            <label :class=\"isDarkMode ? 'text-white' : 'text-slate-900'\">Date</label>\n            <Input\n                v-model=\"dateString\"\n                type=\"date\"\n                :class=\"[\n                isDarkMode ? 'bg-gray-800 border-gray-700 text-white' : 'bg-white border-slate-200'\n              ]\"\n            />\n          </div>\n\n          <div class=\"space-y-1 sm:space-y-2\">\n            <label :class=\"isDarkMode ? 'text-white' : 'text-slate-900'\">Image (optionnel)</label>\n            <div class=\"flex flex-wrap items-center gap-2\">\n              <input\n                  type=\"file\"\n                  id=\"image\"\n                  accept=\"image/*\"\n                  @change=\"handleImageUpload\"\n                  class=\"hidden\"\n                  ref=\"fileInput\"\n              />\n              <button\n                  type=\"button\"\n                  @click=\"$refs.fileInput.click()\"\n                  :class=\"[\n                  'px-3 py-2 rounded-md flex items-center gap-1 text-sm sm:text-base',\n                  isDarkMode ? 'bg-gray-800 hover:bg-gray-700 text-white' : 'bg-gray-100 hover:bg-gray-200 text-gray-700'\n                ]\"\n              >\n                <span>Choisir une image</span>\n              </button>\n              <span class=\"text-sm\" :class=\"isDarkMode ? 'text-gray-400' : 'text-gray-500'\">\n                {{ imageUpload.state.value.fileName || 'Aucun fichier sélectionné' }}\n              </span>\n            </div>\n\n            <div v-if=\"imageUpload.state.value.previewUrl\" class=\"mt-2 relative\">\n              <img :src=\"imageUpload.state.value.previewUrl\" alt=\"Prévisualisation\" class=\"h-24 w-auto object-cover rounded-md\" />\n              <button\n                  type=\"button\"\n                  @click=\"removeImage\"\n                  class=\"absolute top-1 right-1 bg-red-500 text-white rounded-full \"\n              >\n                <span class=\"items-center justify-center\"><CircleX/></span>\n              </button>\n            </div>\n            \n            <!-- Affichage des erreurs et informations de compression -->\n            <div v-if=\"imageUpload.state.value.error\" class=\"mt-2\">\n              <Alert variant=\"destructive\">\n                <AlertDescription>\n                  {{ imageUpload.state.value.error }}\n                </AlertDescription>\n              </Alert>\n            </div>\n            \n            <div v-if=\"imageUpload.state.value.compressionInfo\" class=\"mt-1\">\n              <div class=\"text-xs flex items-center gap-1\" :class=\"isDarkMode ? 'text-green-400' : 'text-green-600'\">\n                <Check class=\"h-3 w-3\" />\n                {{ imageUpload.state.value.compressionInfo }}\n              </div>\n            </div>\n            \n            <div v-if=\"imageUpload.state.value.isUploading\" class=\"mt-2\">\n              <div class=\"flex items-center gap-2 text-sm\" :class=\"isDarkMode ? 'text-gray-400' : 'text-gray-600'\">\n                <Upload class=\"h-4 w-4 animate-pulse\" />\n                Traitement en cours...\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"space-y-2 sm:space-y-3\">\n          <label :class=\"[\n            'text-sm font-medium',\n            isDarkMode ? 'text-white' : 'text-slate-900'\n          ]\">\n            Type de récurrence\n          </label>\n          <div class=\"grid grid-cols-1 gap-2\">\n            <Button\n                variant=\"outline\"\n                :class=\"[\n                'justify-start py-1 sm:py-2 text-sm sm:text-base',\n                !newMovement.isRecurrent\n                  ? 'bg-emerald-500 hover:bg-emerald-600 text-white'\n                  : ''\n              ]\"\n                @click=\"newMovement.isRecurrent = false\"\n            >\n              <span class=\"mr-2\">🔄</span> Pas de récurrence\n            </Button>\n            <Button\n                variant=\"outline\"\n                :class=\"[\n                'justify-start py-1 sm:py-2 text-sm sm:text-base',\n                newMovement.isRecurrent\n                  ? 'bg-emerald-500 hover:bg-emerald-600 text-white'\n                  : ''\n              ]\"\n                @click=\"newMovement.isRecurrent = true\"\n            >\n              <span class=\"mr-2\">📅</span> Mensuel\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <DialogFooter :class=\"[\n        'sticky bottom-0 z-10 p-4 sm:p-6 border-t',\n        isDarkMode ? 'border-gray-800 bg-gray-900' : 'border-slate-200 bg-white'\n      ]\">\n        <Button\n            class=\"w-full bg-emerald-500 hover:bg-emerald-600 text-white\"\n            @click=\"handleAddMovement\"\n            :disabled=\"imageUpload.state.value.isUploading\"\n        >\n          {{ imageUpload.state.value.isUploading ? 'Traitement...' : 'Ajouter' }}\n        </Button>\n      </DialogFooter>\n    </DialogContent>\n  </Dialog>\n</template>\n\n<script setup lang=\"ts\">\n  import type { AddMovementDialogProps, NewMovement } from '@/types/finance';\n  import {\n    Dialog,\n    DialogContent,\n    DialogFooter,\n    DialogHeader,\n    DialogTitle\n  } from '@/components/ui/dialog';\n  import { Button } from '@/components/ui/button';\n  import { Input } from '@/components/ui/input';\n  import { Alert, AlertDescription } from '@/components/ui/alert';\n  import { CircleX, Upload, Check } from 'lucide-vue-next';\n  import { useImageUpload } from '~/composables/useImageUpload';\n\n\n  const props = defineProps<AddMovementDialogProps>();\n  const emit = defineEmits(['update:isOpen', 'addMovement']);\n\n  const fileInput = ref<HTMLInputElement | null>(null);\n  const dateString = ref('');\n  \n  // Utilisation du composable pour l'upload d'images\n  const imageUpload = useImageUpload({\n    maxSizeBytes: 2 * 1024 * 1024, // 2MB\n    allowedTypes: ['image/jpeg', 'image/png', 'image/webp'],\n    compressionEnabled: true\n  });\n\n  const newMovement = ref<NewMovement>({\n    name: '',\n    amount: 0,\n    date: '',\n    type: 'expense',\n    isRecurrent: false,\n    imageUrl: '',\n  });\n\n  watch(dateString, (newValue) => {\n    newMovement.value.date = newValue;\n  });\n\n  const handleImageUpload = async (event: Event) => {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n      await imageUpload.handleFileUpload(file);\n    }\n  };\n\n  const removeImage = () => {\n    imageUpload.resetState();\n    newMovement.value.imageUrl = '';\n    if (fileInput.value) {\n      fileInput.value.value = '';\n    }\n  };\n\n  const handleAddMovement = async () => {\n    if (!newMovement.value.name || !newMovement.value.amount || !newMovement.value.date) {\n      return;\n    }\n\n    try {\n      // Obtenir l'URL de données si une image est présente\n      if (imageUpload.state.value.file) {\n        newMovement.value.imageUrl = await imageUpload.getDataUrl();\n      }\n\n      emit('addMovement', { ...newMovement.value });\n\n      // Reset du formulaire\n      newMovement.value = {\n        name: '',\n        amount: 0,\n        date: '',\n        type: 'expense',\n        isRecurrent: false,\n        imageUrl: '',\n      };\n      dateString.value = '';\n      removeImage();\n    } catch (error) {\n      console.error('Erreur lors de l\\'ajout du mouvement:', error);\n    }\n  };\n</script>","export const formatCurrency = (amount: number): string => {\n    return new Intl.NumberFormat('fr-FR', {\n        style: 'currency',\n        currency: 'EUR'\n    }).format(amount);\n};\n\nexport const formatDate = (date?: Date): string => {\n    if (!date) return '';\n    return date.toLocaleDateString('fr-FR');\n};\n\nexport const formatMonthYear = (date?: Date): string => {\n    if (!date) return '';\n    return date.toLocaleDateString('fr-FR', {\n        month: 'long',\n        year: 'numeric'\n    });\n};\n\nexport const formatFullDate = (date?: Date): string => {\n    if (!date) return '';\n    return date.toLocaleDateString('fr-FR', {\n        weekday: 'long',\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric'\n    });\n};","import { defineStore } from 'pinia';\nimport type { Movement, NewMovement } from '~/types/finance';\n\nexport interface MovementsState {\n  movements: Movement[];\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport const useMovementsStore = defineStore('movements', {\n  state: (): MovementsState => ({\n    movements: [],\n    isLoading: false,\n    error: null\n  }),\n\n  getters: {\n    // Mouvements triés par date (plus récents en premier)\n    sortedMovements: (state) => {\n      return [...state.movements].sort((a, b) => {\n        const dateA = a.date instanceof Date ? a.date : new Date(a.date);\n        const dateB = b.date instanceof Date ? b.date : new Date(b.date);\n        return dateB.getTime() - dateA.getTime();\n      });\n    },\n\n    // Mouvements par type\n    expenseMovements: (state) => state.movements.filter(m => m.type === 'expense'),\n    incomeMovements: (state) => state.movements.filter(m => m.type === 'income'),\n    \n    // Mouvements récurrents\n    recurrentMovements: (state) => state.movements.filter(m => m.isRecurrent),\n\n    // Total des mouvements\n    totalMovements: (state) => state.movements.length,\n\n    // Mouvement par ID\n    getMovementById: (state) => (id: number) => state.movements.find(m => m.id === id)\n  },\n\n  actions: {\n    // Ajouter un mouvement\n    addMovement(newMovement: NewMovement): Movement {\n      this.error = null;\n      \n      try {\n        const date = typeof newMovement.date === 'string'\n          ? new Date(newMovement.date)\n          : newMovement.date;\n\n        if (isNaN(date.getTime())) {\n          throw new Error('Date invalide');\n        }\n\n        const movement: Movement = {\n          id: Date.now() + Math.random(), // ID plus unique\n          name: newMovement.name.trim(),\n          amount: Number(newMovement.amount),\n          date,\n          type: newMovement.type,\n          isRecurrent: newMovement.isRecurrent,\n          imageUrl: newMovement.imageUrl || undefined\n        };\n\n        // Validation\n        if (!movement.name) {\n          throw new Error('Le nom est requis');\n        }\n        if (movement.amount <= 0) {\n          throw new Error('Le montant doit être positif');\n        }\n\n        this.movements.push(movement);\n        return movement;\n      } catch (error) {\n        this.error = error instanceof Error ? error.message : 'Erreur lors de l\\'ajout';\n        throw error;\n      }\n    },\n\n    // Mettre à jour un mouvement\n    updateMovement(updatedMovement: Movement): boolean {\n      this.error = null;\n      \n      try {\n        const index = this.movements.findIndex(m => m.id === updatedMovement.id);\n        if (index === -1) {\n          throw new Error('Mouvement introuvable');\n        }\n\n        // Validation\n        if (!updatedMovement.name.trim()) {\n          throw new Error('Le nom est requis');\n        }\n        if (updatedMovement.amount <= 0) {\n          throw new Error('Le montant doit être positif');\n        }\n        if (isNaN(updatedMovement.date.getTime())) {\n          throw new Error('Date invalide');\n        }\n\n        this.movements[index] = {\n          ...updatedMovement,\n          name: updatedMovement.name.trim(),\n          amount: Number(updatedMovement.amount)\n        };\n\n        return true;\n      } catch (error) {\n        this.error = error instanceof Error ? error.message : 'Erreur lors de la mise à jour';\n        return false;\n      }\n    },\n\n    // Supprimer un mouvement\n    deleteMovement(id: number): boolean {\n      this.error = null;\n      \n      const index = this.movements.findIndex(m => m.id === id);\n      if (index === -1) {\n        this.error = 'Mouvement introuvable';\n        return false;\n      }\n\n      this.movements.splice(index, 1);\n      return true;\n    },\n\n    // Supprimer tous les mouvements\n    clearAllMovements() {\n      this.movements = [];\n      this.error = null;\n    },\n\n    // Charger les mouvements (pour la persistance)\n    loadMovements(movements: Movement[]) {\n      this.isLoading = true;\n      this.error = null;\n      \n      try {\n        // Validation et nettoyage des données\n        this.movements = movements.map(m => ({\n          ...m,\n          date: m.date instanceof Date ? m.date : new Date(m.date),\n          amount: Number(m.amount),\n          name: m.name.trim(),\n          // Nettoyer les URLs blob\n          imageUrl: m.imageUrl && m.imageUrl.startsWith('blob:') ? undefined : m.imageUrl\n        })).filter(m => \n          m.name && \n          !isNaN(m.amount) && \n          m.amount > 0 && \n          !isNaN(m.date.getTime())\n        );\n      } catch (error) {\n        this.error = 'Erreur lors du chargement des données';\n        this.movements = [];\n      } finally {\n        this.isLoading = false;\n      }\n    },\n\n    // Réinitialiser l'état d'erreur\n    clearError() {\n      this.error = null;\n    }\n  }\n});","import { defineStore } from 'pinia';\nimport { useMovementsStore } from './movements';\nimport type { Movement } from '~/types/finance';\n\nexport interface FinanceCalculations {\n  totalBalance: number;\n  monthlyIncome: number;\n  monthlyExpenses: number;\n  monthlyBalance: number;\n  recurrentAmount: number;\n}\n\nexport const useFinanceStore = defineStore('finance', {\n  getters: {\n    // Générer les récurrences pour une période donnée\n    getMovementsWithRecurrences: () => {\n      return (startDate: Date, endDate: Date): Movement[] => {\n        const movementsStore = useMovementsStore();\n        \n        if (!startDate || !endDate || isNaN(startDate.getTime()) || isNaN(endDate.getTime())) {\n          console.error('Dates invalides:', { startDate, endDate });\n          return [...movementsStore.movements];\n        }\n\n        try {\n          const result: Movement[] = [...movementsStore.movements];\n\n          movementsStore.recurrentMovements.forEach(movement => {\n            const originalDate = new Date(movement.date);\n            \n            if (isNaN(originalDate.getTime())) {\n              console.error('Date invalide pour le mouvement récurrent:', movement);\n              return;\n            }\n\n            let currentDate = new Date(originalDate);\n            currentDate.setMonth(currentDate.getMonth() + 1);\n\n            while (currentDate <= endDate) {\n              if (currentDate >= startDate) {\n                const clonedMovement: Movement = {\n                  ...movement,\n                  id: movement.id + currentDate.getTime(), // ID unique\n                  date: new Date(currentDate),\n                  isGeneratedRecurrence: true\n                };\n                result.push(clonedMovement);\n              }\n\n              currentDate = new Date(currentDate);\n              currentDate.setMonth(currentDate.getMonth() + 1);\n            }\n          });\n\n          return result;\n        } catch (error) {\n          console.error('Erreur lors de la génération des récurrences:', error);\n          return [...movementsStore.movements];\n        }\n      };\n    },\n\n    // Mouvements d'un mois spécifique\n    getMonthMovements: () => {\n      return (date: Date): Movement[] => {\n        if (!date || isNaN(date.getTime())) {\n          console.error('Date invalide:', date);\n          return [];\n        }\n\n        try {\n          const year = date.getFullYear();\n          const month = date.getMonth();\n          const startDate = new Date(year, month, 1);\n          const endDate = new Date(year, month + 1, 0);\n\n          const financeStore = useFinanceStore();\n          const allMovements = financeStore.getMovementsWithRecurrences(startDate, endDate);\n\n          return allMovements.filter(movement => {\n            const movementDate = movement.date instanceof Date\n              ? movement.date\n              : new Date(movement.date);\n\n            if (isNaN(movementDate.getTime())) {\n              return false;\n            }\n\n            return movementDate.getMonth() === date.getMonth() &&\n              movementDate.getFullYear() === date.getFullYear();\n          });\n        } catch (error) {\n          console.error('Erreur lors de la récupération des mouvements du mois:', error);\n          return [];\n        }\n      };\n    },\n\n    // Mouvements d'un jour spécifique\n    getDayMovements: () => {\n      return (date: Date): Movement[] => {\n        if (!date || isNaN(date.getTime())) {\n          console.error('Date invalide:', date);\n          return [];\n        }\n\n        try {\n          // Générer les récurrences pour les 6 prochains mois\n          const sixMonthsLater = new Date(date);\n          sixMonthsLater.setMonth(sixMonthsLater.getMonth() + 6);\n\n          const financeStore = useFinanceStore();\n          const allMovements = financeStore.getMovementsWithRecurrences(date, sixMonthsLater);\n\n          return allMovements.filter(movement => {\n            const movementDate = movement.date instanceof Date\n              ? movement.date\n              : new Date(movement.date);\n\n            if (isNaN(movementDate.getTime())) {\n              return false;\n            }\n\n            return movementDate.getDate() === date.getDate() &&\n              movementDate.getMonth() === date.getMonth() &&\n              movementDate.getFullYear() === date.getFullYear();\n          });\n        } catch (error) {\n          console.error('Erreur lors de la récupération des mouvements du jour:', error);\n          return [];\n        }\n      };\n    },\n\n    // Calculs financiers pour un mois\n    getMonthCalculations: () => {\n      return (date: Date): FinanceCalculations => {\n        const financeStore = useFinanceStore();\n        const monthMovements = financeStore.getMonthMovements(date);\n\n        const income = monthMovements\n          .filter(m => m.type === 'income')\n          .reduce((total, m) => total + Math.abs(m.amount), 0);\n\n        const expenses = monthMovements\n          .filter(m => m.type === 'expense')\n          .reduce((total, m) => total + Math.abs(m.amount), 0);\n\n        const recurrent = monthMovements\n          .filter(m => m.isRecurrent || m.isGeneratedRecurrence)\n          .reduce((total, m) => total + Math.abs(m.amount), 0);\n\n        return {\n          totalBalance: income - expenses,\n          monthlyIncome: income,\n          monthlyExpenses: expenses,\n          monthlyBalance: income - expenses,\n          recurrentAmount: recurrent\n        };\n      };\n    },\n\n    // Solde total général\n    getTotalBalance: () => {\n      const movementsStore = useMovementsStore();\n      return movementsStore.movements.reduce((total, movement) => {\n        const amount = movement.type === 'expense'\n          ? -Math.abs(movement.amount)\n          : Math.abs(movement.amount);\n        return total + amount;\n      }, 0);\n    }\n  }\n});","import Dexie, { type EntityTable } from 'dexie';\nimport type { Movement } from '~/types/finance';\n\nexport interface StoredMovement extends Omit<Movement, 'date'> {\n  date: string; // Stocké comme string pour IndexedDB\n}\n\nexport interface AppSettings {\n  id?: number;\n  key: string;\n  value: any;\n  updatedAt: Date;\n}\n\n// Base de données IndexedDB avec Dexie\nexport class SavrDatabase extends Dexie {\n  movements!: EntityTable<StoredMovement, 'id'>;\n  settings!: EntityTable<AppSettings, 'id'>;\n\n  constructor() {\n    super('SavrDB');\n    \n    this.version(1).stores({\n      movements: 'id, name, amount, date, type, isRecurrent, imageUrl',\n      settings: '++id, key, value, updatedAt'\n    });\n\n    this.version(2).stores({\n      movements: 'id, name, amount, date, type, isRecurrent, imageUrl, isGeneratedRecurrence',\n      settings: '++id, key, value, updatedAt'\n    }).upgrade(tx => {\n      // Migration pour ajouter isGeneratedRecurrence\n      return tx.table('movements').toCollection().modify(movement => {\n        movement.isGeneratedRecurrence = false;\n      });\n    });\n  }\n}\n\n// Instance unique de la base de données\nexport const db = new SavrDatabase();\n\n// Service de gestion des mouvements\nexport class MovementsService {\n  // Sauvegarder tous les mouvements\n  static async saveMovements(movements: Movement[]): Promise<void> {\n    try {\n      const storedMovements: StoredMovement[] = movements.map(m => {\n        // S'assurer que date est un objet Date\n        const date = m.date instanceof Date ? m.date : new Date(m.date);\n        \n        return {\n          ...m,\n          date: date.toISOString()\n        };\n      });\n\n      await db.transaction('rw', db.movements, async () => {\n        await db.movements.clear();\n        await db.movements.bulkAdd(storedMovements);\n      });\n    } catch (error) {\n      console.error('Erreur sauvegarde mouvements:', error);\n      throw new Error('Impossible de sauvegarder les mouvements');\n    }\n  }\n\n  // Charger tous les mouvements\n  static async loadMovements(): Promise<Movement[]> {\n    try {\n      const storedMovements = await db.movements.toArray();\n      \n      return storedMovements.map(m => ({\n        ...m,\n        date: new Date(m.date)\n      }));\n    } catch (error) {\n      console.error('Erreur chargement mouvements:', error);\n      throw new Error('Impossible de charger les mouvements');\n    }\n  }\n\n  // Ajouter un mouvement\n  static async addMovement(movement: Movement): Promise<void> {\n    try {\n      const date = movement.date instanceof Date ? movement.date : new Date(movement.date);\n      \n      const storedMovement: StoredMovement = {\n        ...movement,\n        date: date.toISOString()\n      };\n\n      await db.movements.add(storedMovement);\n    } catch (error) {\n      console.error('Erreur ajout mouvement:', error);\n      throw new Error('Impossible d\\'ajouter le mouvement');\n    }\n  }\n\n  // Mettre à jour un mouvement\n  static async updateMovement(movement: Movement): Promise<void> {\n    try {\n      const date = movement.date instanceof Date ? movement.date : new Date(movement.date);\n      \n      const storedMovement: StoredMovement = {\n        ...movement,\n        date: date.toISOString()\n      };\n\n      await db.movements.update(movement.id, storedMovement);\n    } catch (error) {\n      console.error('Erreur mise à jour mouvement:', error);\n      throw new Error('Impossible de mettre à jour le mouvement');\n    }\n  }\n\n  // Supprimer un mouvement\n  static async deleteMovement(id: number): Promise<void> {\n    try {\n      await db.movements.delete(id);\n    } catch (error) {\n      console.error('Erreur suppression mouvement:', error);\n      throw new Error('Impossible de supprimer le mouvement');\n    }\n  }\n\n  // Vider tous les mouvements\n  static async clearAllMovements(): Promise<void> {\n    try {\n      await db.movements.clear();\n    } catch (error) {\n      console.error('Erreur vidage mouvements:', error);\n      throw new Error('Impossible de vider les mouvements');\n    }\n  }\n}\n\n// Service de gestion des paramètres\nexport class SettingsService {\n  // Sauvegarder un paramètre\n  static async saveSetting(key: string, value: any): Promise<void> {\n    try {\n      const existing = await db.settings.where('key').equals(key).first();\n      \n      const setting: AppSettings = {\n        key,\n        value,\n        updatedAt: new Date()\n      };\n\n      if (existing) {\n        await db.settings.update(existing.id!, setting);\n      } else {\n        await db.settings.add(setting);\n      }\n    } catch (error) {\n      console.error('Erreur sauvegarde paramètre:', error);\n      throw new Error(`Impossible de sauvegarder le paramètre ${key}`);\n    }\n  }\n\n  // Charger un paramètre\n  static async loadSetting<T>(key: string, defaultValue: T): Promise<T> {\n    try {\n      const setting = await db.settings.where('key').equals(key).first();\n      return setting ? setting.value : defaultValue;\n    } catch (error) {\n      console.error('Erreur chargement paramètre:', error);\n      return defaultValue;\n    }\n  }\n\n  // Charger tous les paramètres\n  static async loadAllSettings(): Promise<Record<string, any>> {\n    try {\n      const settings = await db.settings.toArray();\n      return settings.reduce((acc, setting) => {\n        acc[setting.key] = setting.value;\n        return acc;\n      }, {} as Record<string, any>);\n    } catch (error) {\n      console.error('Erreur chargement paramètres:', error);\n      return {};\n    }\n  }\n\n  // Supprimer un paramètre\n  static async deleteSetting(key: string): Promise<void> {\n    try {\n      await db.settings.where('key').equals(key).delete();\n    } catch (error) {\n      console.error('Erreur suppression paramètre:', error);\n      throw new Error(`Impossible de supprimer le paramètre ${key}`);\n    }\n  }\n}\n\n// Service de migration depuis localStorage\nexport class MigrationService {\n  // Migrer les données depuis localStorage\n  static async migrateFromLocalStorage(): Promise<{\n    movements: number;\n    settings: number;\n  }> {\n    if (!process.client) {\n      return { movements: 0, settings: 0 };\n    }\n\n    let migratedMovements = 0;\n    let migratedSettings = 0;\n\n    try {\n      // Migration des mouvements\n      const storedMovements = localStorage.getItem('financeMovements');\n      if (storedMovements) {\n        const movements: Movement[] = JSON.parse(storedMovements);\n        await MovementsService.saveMovements(movements);\n        migratedMovements = movements.length;\n        localStorage.removeItem('financeMovements');\n      }\n\n      // Migration des paramètres utilisateur\n      const storedSettings = localStorage.getItem('userSettings');\n      if (storedSettings) {\n        const settings = JSON.parse(storedSettings);\n        for (const [key, value] of Object.entries(settings)) {\n          await SettingsService.saveSetting(key, value);\n          migratedSettings++;\n        }\n        localStorage.removeItem('userSettings');\n      }\n\n      console.log(`Migration terminée: ${migratedMovements} mouvements, ${migratedSettings} paramètres`);\n      \n      return { movements: migratedMovements, settings: migratedSettings };\n    } catch (error) {\n      console.error('Erreur lors de la migration:', error);\n      throw new Error('Échec de la migration des données');\n    }\n  }\n\n  // Vérifier si une migration est nécessaire\n  static needsMigration(): boolean {\n    if (!process.client) return false;\n    \n    return !!(\n      localStorage.getItem('financeMovements') ||\n      localStorage.getItem('userSettings')\n    );\n  }\n\n  // Exporter toutes les données pour sauvegarde\n  static async exportData(): Promise<{\n    movements: Movement[];\n    settings: Record<string, any>;\n    exportDate: string;\n    version: string;\n  }> {\n    try {\n      const movements = await MovementsService.loadMovements();\n      const settings = await SettingsService.loadAllSettings();\n\n      return {\n        movements,\n        settings,\n        exportDate: new Date().toISOString(),\n        version: '1.0'\n      };\n    } catch (error) {\n      console.error('Erreur export données:', error);\n      throw new Error('Impossible d\\'exporter les données');\n    }\n  }\n\n  // Importer des données depuis une sauvegarde\n  static async importData(data: {\n    movements: Movement[];\n    settings: Record<string, any>;\n  }): Promise<void> {\n    try {\n      await db.transaction('rw', [db.movements, db.settings], async () => {\n        // Sauvegarder les mouvements\n        if (data.movements?.length) {\n          await MovementsService.saveMovements(data.movements);\n        }\n\n        // Sauvegarder les paramètres\n        if (data.settings) {\n          for (const [key, value] of Object.entries(data.settings)) {\n            await SettingsService.saveSetting(key, value);\n          }\n        }\n      });\n    } catch (error) {\n      console.error('Erreur import données:', error);\n      throw new Error('Impossible d\\'importer les données');\n    }\n  }\n}","import { storeToRefs } from 'pinia';\nimport { useMovementsStore } from '~/stores/movements';\nimport { useFinanceStore } from '~/stores/finance';\nimport { useUIStore } from '~/stores/ui';\nimport { MovementsService, MigrationService } from '~/utils/database';\nimport type { Movement, NewMovement } from '~/types/finance';\n\n/**\n * Composable principal pour la gestion financière\n * Fait le pont entre les stores Pinia et les composants\n */\nexport function useFinance() {\n  const movementsStore = useMovementsStore();\n  const financeStore = useFinanceStore();\n  const uiStore = useUIStore();\n\n  // Refs réactives depuis les stores\n  const { movements, isLoading, error } = storeToRefs(movementsStore);\n\n  // Initialisation manuelle des données (pour les cas spéciaux)\n  const initializeData = async () => {\n    try {\n      uiStore.setLoading(true, 'Rechargement des données...');\n      const loadedMovements = await MovementsService.loadMovements();\n      movementsStore.loadMovements(loadedMovements);\n    } catch (error) {\n      console.error('Erreur initialisation:', error);\n      uiStore.showError(\n        'Erreur de chargement',\n        'Impossible de charger vos données.'\n      );\n    } finally {\n      uiStore.setLoading(false);\n    }\n  };\n\n  // Sauvegarder automatiquement après chaque modification\n  const autoSave = async () => {\n    try {\n      await MovementsService.saveMovements(movements.value);\n    } catch (error) {\n      console.error('Erreur sauvegarde automatique:', error);\n      uiStore.showError(\n        'Erreur de sauvegarde',\n        'Vos modifications n\\'ont pas pu être sauvegardées automatiquement.'\n      );\n    }\n  };\n\n  // Ajouter un mouvement\n  const addMovement = async (newMovement: NewMovement): Promise<boolean> => {\n    try {\n      uiStore.clearNotifications();\n      const movement = movementsStore.addMovement(newMovement);\n      await autoSave();\n      \n      uiStore.showSuccess('Mouvement ajouté', `${movement.name} a été ajouté avec succès`);\n      return true;\n    } catch (error) {\n      const message = error instanceof Error ? error.message : 'Erreur inconnue';\n      uiStore.showError('Erreur d\\'ajout', message);\n      return false;\n    }\n  };\n\n  // Mettre à jour un mouvement\n  const updateMovement = async (updatedMovement: Movement): Promise<boolean> => {\n    try {\n      uiStore.clearNotifications();\n      const success = movementsStore.updateMovement(updatedMovement);\n      \n      if (success) {\n        await autoSave();\n        uiStore.showSuccess('Mouvement modifié', 'Les modifications ont été sauvegardées');\n        return true;\n      }\n      return false;\n    } catch (error) {\n      const message = error instanceof Error ? error.message : 'Erreur inconnue';\n      uiStore.showError('Erreur de modification', message);\n      return false;\n    }\n  };\n\n  // Supprimer un mouvement\n  const deleteMovement = async (id: number): Promise<boolean> => {\n    try {\n      uiStore.clearNotifications();\n      const success = movementsStore.deleteMovement(id);\n      \n      if (success) {\n        await autoSave();\n        uiStore.showSuccess('Mouvement supprimé', 'Le mouvement a été supprimé avec succès');\n        return true;\n      }\n      return false;\n    } catch (error) {\n      const message = error instanceof Error ? error.message : 'Erreur inconnue';\n      uiStore.showError('Erreur de suppression', message);\n      return false;\n    }\n  };\n\n  // Fonctions de calcul (délégation au store finance)\n  const getMonthMovements = (date: Date) => financeStore.getMonthMovements(date);\n  const getDayMovements = (date: Date) => financeStore.getDayMovements(date);\n  const getMonthBalance = (date: Date) => financeStore.getMonthCalculations(date).monthlyBalance;\n  const getIncomeExpenseForMonth = (date: Date) => {\n    const calc = financeStore.getMonthCalculations(date);\n    return {\n      income: calc.monthlyIncome,\n      expense: calc.monthlyExpenses\n    };\n  };\n\n  // Fonctions utilitaires\n  const getTotalBalance = () => financeStore.getTotalBalance;\n\n  const exportData = async () => {\n    try {\n      uiStore.setLoading(true, 'Export en cours...');\n      const data = await MigrationService.exportData();\n      \n      // Créer un fichier de téléchargement\n      const blob = new Blob([JSON.stringify(data, null, 2)], { \n        type: 'application/json' \n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `savr-backup-${new Date().toISOString().split('T')[0]}.json`;\n      a.click();\n      URL.revokeObjectURL(url);\n      \n      uiStore.showSuccess('Export réussi', 'Vos données ont été exportées avec succès');\n    } catch (error) {\n      uiStore.showError('Erreur d\\'export', 'Impossible d\\'exporter vos données');\n    } finally {\n      uiStore.setLoading(false);\n    }\n  };\n\n  const importData = async (file: File) => {\n    try {\n      uiStore.setLoading(true, 'Import en cours...');\n      \n      const text = await file.text();\n      const data = JSON.parse(text);\n      \n      await MigrationService.importData(data);\n      await initializeData(); // Recharger les données\n      \n      uiStore.showSuccess('Import réussi', 'Vos données ont été importées avec succès');\n    } catch (error) {\n      uiStore.showError('Erreur d\\'import', 'Format de fichier invalide ou données corrompues');\n    } finally {\n      uiStore.setLoading(false);\n    }\n  };\n\n  // L'initialisation est maintenant gérée par le plugin pinia.client.ts\n\n  return {\n    // État\n    movements: readonly(movements),\n    isLoading: readonly(isLoading),\n    error: readonly(error),\n\n    // Actions\n    addMovement,\n    updateMovement,\n    deleteMovement,\n\n    // Calculs\n    getMonthMovements,\n    getDayMovements,\n    getMonthBalance,\n    getIncomeExpenseForMonth,\n    getTotalBalance,\n\n    // Utilitaires\n    initializeData,\n    exportData,\n    importData\n  };\n}","<template>\n  <div :class=\"[\n    'min-h-screen transition-colors duration-300',\n    isDarkMode ? 'dark bg-gray-950' : 'bg-slate-50'\n  ]\">\n    <div class=\"p-6 space-y-6\">\n      <div class=\"flex justify-between items-center\">\n        <div class=\"space-y-1\">\n          <div :class=\"isDarkMode ? 'text-gray-400' : 'text-slate-600'\">\n            {{ formatFullDate(selectedDate) }}\n          </div>\n          <h1 :class=\"[\n            'text-4xl font-bold flex items-center gap-2',\n            isDarkMode ? 'text-white' : 'text-slate-900'\n          ]\">\n            Bonjour,\n            <span>User</span>\n          </h1>\n        </div>\n        <button\n            @click=\"toggleDarkMode\"\n            :class=\"[\n            'rounded-full p-2',\n            isDarkMode ? 'hover:bg-gray-800' : 'hover:bg-slate-200'\n          ]\"\n        >\n          <Sun v-if=\"isDarkMode\" class=\"h-6 w-6 text-yellow-500\" />\n          <Moon v-else class=\"h-6 w-6 text-slate-700\" />\n        </button>\n      </div>\n\n      <ClientOnly>\n        <BalanceCard\n            :movements=\"financeData.movements.value || []\"\n            :selected-month=\"currentMonth\"\n            :is-dark-mode=\"isDarkMode\"\n        />\n      </ClientOnly>\n\n      <ClientOnly>\n        <FinanceCalendar\n            :movements=\"financeData.movements.value || []\"\n            :selected-date=\"selectedDate\"\n            :current-month=\"currentMonth\"\n            :is-dark-mode=\"isDarkMode\"\n            @update:selected-date=\"uiStore.setSelectedDate($event)\"\n            @update:current-month=\"uiStore.setCurrentMonth($event)\"\n        />\n      </ClientOnly>\n\n      <ClientOnly>\n        <MovementsList\n            :movements=\"financeData.movements.value || []\"\n            :selected-date=\"selectedDate\"\n            :is-dark-mode=\"isDarkMode\"\n            @movement-updated=\"handleMovementUpdated\"\n        />\n      </ClientOnly>\n    </div>\n\n    <button\n        @click=\"uiStore.openAddDialog()\"\n        class=\"fixed bottom-20 right-6 rounded-full w-12 h-12 shadow-lg bg-emerald-500 hover:bg-emerald-600 text-white flex items-center justify-center\"\n    >\n      <Plus class=\"h-6 w-6\" />\n    </button>\n\n\n    <AddMovementDialog\n        :is-open=\"showAddDialog\"\n        :is-dark-mode=\"isDarkMode\"\n        @update:is-open=\"uiStore.closeAddDialog\"\n        @add-movement=\"handleAddMovement\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { Sun, Moon, Plus } from 'lucide-vue-next';\n  import type { NewMovement } from '~/types/finance';\n  import { formatFullDate } from '~/utils/formatters';\n  import { useFinance } from '~/composables/useFinance';\n  import { useSettingsStore } from '~/stores/settings';\n  import { useUIStore } from '~/stores/ui';\n  import { storeToRefs } from 'pinia';\n\n  // Stores\n  const financeData = useFinance();\n  const settingsStore = useSettingsStore();\n  const uiStore = useUIStore();\n  \n  // État réactif depuis les stores\n  const { isDarkMode } = storeToRefs(settingsStore);\n  const { showAddDialog, selectedDate, currentMonth } = storeToRefs(uiStore);\n  \n  // Initialiser les dates si nécessaire\n  const defaultDate = new Date();\n  if (!selectedDate.value || isNaN(selectedDate.value.getTime())) {\n    uiStore.setSelectedDate(defaultDate);\n  }\n  if (!currentMonth.value || isNaN(currentMonth.value.getTime())) {\n    uiStore.setCurrentMonth(defaultDate);\n  }\n  \n  // Charger les paramètres au démarrage\n  onMounted(() => {\n    settingsStore.loadSettings();\n  });\n\n  const toggleDarkMode = () => {\n    settingsStore.toggleDarkMode();\n  };\n\n  const handleAddMovement = async (newMovement: NewMovement) => {\n    const success = await financeData.addMovement(newMovement);\n    if (success) {\n      uiStore.closeAddDialog();\n    }\n  };\n\n  const handleMovementUpdated = () => {\n    // Plus besoin de forcer le re-render avec Pinia\n    // La réactivité est automatique\n  };\n</script>"],"version":3}