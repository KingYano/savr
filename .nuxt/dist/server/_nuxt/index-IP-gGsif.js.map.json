{"file":"index-IP-gGsif.js","mappings":"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","names":[],"sources":["../../../../components/ui/dialog/Dialog.vue","../../../../components/ui/dialog/DialogContent.vue","../../../../components/ui/dialog/DialogFooter.vue","../../../../components/ui/dialog/DialogHeader.vue","../../../../components/ui/dialog/DialogTitle.vue","../../../../components/ui/alert/Alert.vue","../../../../components/ui/alert/AlertDescription.vue","../../../../components/ui/alert/index.ts","../../../../utils/imageValidator.ts","../../../../utils/imageCompressor.ts","../../../../composables/useImageUpload.ts","../../../../components/ui/popover/Popover.vue","../../../../components/ui/popover/PopoverContent.vue","../../../../components/ui/popover/PopoverTrigger.vue","../../../../components/categories/CategorySelect.vue","../../../../components/categories/TagSelect.vue","../../../../components/add-movement-dialog/AddMovementDialog.vue","../../../../utils/formatters.ts","../../../../composables/useMovementFilters.ts","../../../../components/edit-movement-dialog/EditMovementDialog.vue","../../../../pages/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { DialogRoot, type DialogRootEmits, type DialogRootProps, useForwardPropsEmits } from 'reka-ui'\n\nconst props = defineProps<DialogRootProps>()\nconst emits = defineEmits<DialogRootEmits>()\n\nconst forwarded = useForwardPropsEmits(props, emits)\n</script>\n\n<template>\n  <DialogRoot v-bind=\"forwarded\">\n    <slot />\n  </DialogRoot>\n</template>\n","<script setup lang=\"ts\">\nimport { cn } from '@/lib/utils'\nimport { X } from 'lucide-vue-next'\nimport {\n  DialogClose,\n  DialogContent,\n  type DialogContentEmits,\n  type DialogContentProps,\n  DialogOverlay,\n  DialogPortal,\n  useForwardPropsEmits,\n} from 'reka-ui'\nimport { computed, type HTMLAttributes } from 'vue'\n\nconst props = defineProps<DialogContentProps & { class?: HTMLAttributes['class'] }>()\nconst emits = defineEmits<DialogContentEmits>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <DialogPortal>\n    <DialogOverlay\n      class=\"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\"\n    />\n    <DialogContent\n      v-bind=\"forwarded\"\n      :class=\"\n        cn(\n          'fixed left-1/2 top-1/2 z-50 grid w-full max-w-lg -translate-x-1/2 -translate-y-1/2 gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg',\n          props.class,\n        )\"\n    >\n      <slot />\n\n      <DialogClose\n        class=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\"\n      >\n        <X class=\"w-4 h-4\" />\n        <span class=\"sr-only\">Close</span>\n      </DialogClose>\n    </DialogContent>\n  </DialogPortal>\n</template>\n","<script setup lang=\"ts\">\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<{ class?: HTMLAttributes['class'] }>()\n</script>\n\n<template>\n  <div\n    :class=\"\n      cn(\n        'flex flex-col-reverse sm:flex-row sm:justify-end sm:gap-x-2',\n        props.class,\n      )\n    \"\n  >\n    <slot />\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<{\n  class?: HTMLAttributes['class']\n}>()\n</script>\n\n<template>\n  <div\n    :class=\"cn('flex flex-col gap-y-1.5 text-center sm:text-left', props.class)\"\n  >\n    <slot />\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { cn } from '@/lib/utils'\nimport { DialogTitle, type DialogTitleProps, useForwardProps } from 'reka-ui'\nimport { computed, type HTMLAttributes } from 'vue'\n\nconst props = defineProps<DialogTitleProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <DialogTitle\n    v-bind=\"forwardedProps\"\n    :class=\"\n      cn(\n        'text-lg font-semibold leading-none tracking-tight',\n        props.class,\n      )\n    \"\n  >\n    <slot />\n  </DialogTitle>\n</template>\n","<script setup lang=\"ts\">\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/lib/utils'\nimport { type AlertVariants, alertVariants } from '.'\n\nconst props = defineProps<{\n  class?: HTMLAttributes['class']\n  variant?: AlertVariants['variant']\n}>()\n</script>\n\n<template>\n  <div :class=\"cn(alertVariants({ variant }), props.class)\" role=\"alert\">\n    <slot />\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<{\n  class?: HTMLAttributes['class']\n}>()\n</script>\n\n<template>\n  <div :class=\"cn('text-sm [&_p]:leading-relaxed', props.class)\">\n    <slot />\n  </div>\n</template>\n","import { cva, type VariantProps } from 'class-variance-authority'\n\nexport { default as Alert } from './Alert.vue'\nexport { default as AlertDescription } from './AlertDescription.vue'\nexport { default as AlertTitle } from './AlertTitle.vue'\n\nexport const alertVariants = cva(\n  'relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7',\n  {\n    variants: {\n      variant: {\n        default: 'bg-background text-foreground',\n        destructive:\n          'border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n)\n\nexport type AlertVariants = VariantProps<typeof alertVariants>\n","export interface ImageValidationResult {\n  isValid: boolean;\n  error?: string;\n  file?: File;\n}\n\nexport interface ImageValidationOptions {\n  maxSizeBytes: number;\n  allowedTypes: string[];\n  maxWidth?: number;\n  maxHeight?: number;\n}\n\nexport const DEFAULT_IMAGE_OPTIONS: ImageValidationOptions = {\n  maxSizeBytes: 2 * 1024 * 1024, // 2MB\n  allowedTypes: ['image/jpeg', 'image/png', 'image/webp'],\n  maxWidth: 1920,\n  maxHeight: 1080\n};\n\nexport async function validateImageFile(\n  file: File, \n  options: Partial<ImageValidationOptions> = {}\n): Promise<ImageValidationResult> {\n  const opts = { ...DEFAULT_IMAGE_OPTIONS, ...options };\n\n  // Vérification de la taille\n  if (file.size > opts.maxSizeBytes) {\n    return {\n      isValid: false,\n      error: `Fichier trop volumineux. Maximum ${Math.round(opts.maxSizeBytes / 1024 / 1024)}MB autorisé.`\n    };\n  }\n\n  // Vérification du type MIME réel\n  const actualMimeType = await getActualMimeType(file);\n  if (!opts.allowedTypes.includes(actualMimeType)) {\n    return {\n      isValid: false,\n      error: `Type de fichier non autorisé. Types acceptés: ${opts.allowedTypes.join(', ')}`\n    };\n  }\n\n  // Vérification des dimensions si spécifiées\n  if (opts.maxWidth || opts.maxHeight) {\n    try {\n      const dimensions = await getImageDimensions(file);\n      if (opts.maxWidth && dimensions.width > opts.maxWidth) {\n        return {\n          isValid: false,\n          error: `Largeur trop importante. Maximum ${opts.maxWidth}px autorisé.`\n        };\n      }\n      if (opts.maxHeight && dimensions.height > opts.maxHeight) {\n        return {\n          isValid: false,\n          error: `Hauteur trop importante. Maximum ${opts.maxHeight}px autorisé.`\n        };\n      }\n    } catch (error) {\n      return {\n        isValid: false,\n        error: 'Impossible de lire les dimensions de l\\'image.'\n      };\n    }\n  }\n\n  return {\n    isValid: true,\n    file\n  };\n}\n\nasync function getActualMimeType(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      const arr = new Uint8Array(reader.result as ArrayBuffer);\n      \n      // Signatures de fichiers (magic numbers)\n      const signatures = {\n        'image/jpeg': [0xFF, 0xD8, 0xFF],\n        'image/png': [0x89, 0x50, 0x4E, 0x47],\n        'image/webp': [0x52, 0x49, 0x46, 0x46]\n      };\n\n      for (const [mimeType, signature] of Object.entries(signatures)) {\n        if (signature.every((byte, index) => arr[index] === byte)) {\n          resolve(mimeType);\n          return;\n        }\n      }\n\n      // Si aucune signature reconnue, fallback sur le type déclaré\n      resolve(file.type);\n    };\n    reader.onerror = () => reject(new Error('Erreur lecture fichier'));\n    reader.readAsArrayBuffer(file.slice(0, 12)); // Lire seulement les premiers bytes\n  });\n}\n\nasync function getImageDimensions(file: File): Promise<{ width: number; height: number }> {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => {\n      resolve({\n        width: img.naturalWidth,\n        height: img.naturalHeight\n      });\n    };\n    img.onerror = () => reject(new Error('Impossible de charger l\\'image'));\n    img.src = URL.createObjectURL(file);\n  });\n}","export interface CompressionOptions {\n  maxWidth: number;\n  maxHeight: number;\n  quality: number;\n  format: 'webp' | 'jpeg' | 'png';\n  maintainAspectRatio: boolean;\n}\n\nexport const DEFAULT_COMPRESSION_OPTIONS: CompressionOptions = {\n  maxWidth: 800,\n  maxHeight: 600,\n  quality: 0.8,\n  format: 'webp',\n  maintainAspectRatio: true\n};\n\nexport interface CompressionResult {\n  compressedFile: Blob;\n  dataUrl: string;\n  originalSize: number;\n  compressedSize: number;\n  compressionRatio: number;\n}\n\nexport async function compressImage(\n  file: File,\n  options: Partial<CompressionOptions> = {}\n): Promise<CompressionResult> {\n  const opts = { ...DEFAULT_COMPRESSION_OPTIONS, ...options };\n  \n  // Vérifier le support WebP\n  if (opts.format === 'webp' && !await supportsWebP()) {\n    opts.format = 'jpeg';\n  }\n\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    \n    img.onload = () => {\n      try {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        \n        if (!ctx) {\n          reject(new Error('Impossible de créer le contexte canvas'));\n          return;\n        }\n\n        // Calculer les nouvelles dimensions\n        const { width, height } = calculateDimensions(\n          img.naturalWidth,\n          img.naturalHeight,\n          opts.maxWidth,\n          opts.maxHeight,\n          opts.maintainAspectRatio\n        );\n\n        canvas.width = width;\n        canvas.height = height;\n\n        // Améliorer la qualité de redimensionnement\n        ctx.imageSmoothingEnabled = true;\n        ctx.imageSmoothingQuality = 'high';\n\n        // Dessiner l'image redimensionnée\n        ctx.drawImage(img, 0, 0, width, height);\n\n        // Convertir en blob avec compression\n        canvas.toBlob(\n          (blob) => {\n            if (!blob) {\n              reject(new Error('Erreur lors de la compression'));\n              return;\n            }\n\n            // Générer l'URL de données\n            const reader = new FileReader();\n            reader.onload = () => {\n              const dataUrl = reader.result as string;\n              const compressionRatio = ((file.size - blob.size) / file.size) * 100;\n\n              resolve({\n                compressedFile: blob,\n                dataUrl,\n                originalSize: file.size,\n                compressedSize: blob.size,\n                compressionRatio: Math.round(compressionRatio)\n              });\n            };\n            reader.onerror = () => reject(new Error('Erreur génération dataURL'));\n            reader.readAsDataURL(blob);\n          },\n          `image/${opts.format}`,\n          opts.quality\n        );\n\n        // Nettoyer\n        URL.revokeObjectURL(img.src);\n      } catch (error) {\n        reject(error);\n      }\n    };\n\n    img.onerror = () => reject(new Error('Impossible de charger l\\'image'));\n    img.src = URL.createObjectURL(file);\n  });\n}\n\nfunction calculateDimensions(\n  originalWidth: number,\n  originalHeight: number,\n  maxWidth: number,\n  maxHeight: number,\n  maintainAspectRatio: boolean\n): { width: number; height: number } {\n  if (!maintainAspectRatio) {\n    return { width: maxWidth, height: maxHeight };\n  }\n\n  const aspectRatio = originalWidth / originalHeight;\n\n  let width = originalWidth;\n  let height = originalHeight;\n\n  // Redimensionner seulement si nécessaire\n  if (width > maxWidth || height > maxHeight) {\n    if (width / maxWidth > height / maxHeight) {\n      width = maxWidth;\n      height = width / aspectRatio;\n    } else {\n      height = maxHeight;\n      width = height * aspectRatio;\n    }\n  }\n\n  return {\n    width: Math.round(width),\n    height: Math.round(height)\n  };\n}\n\nasync function supportsWebP(): Promise<boolean> {\n  return new Promise((resolve) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    \n    canvas.toBlob(\n      (blob) => resolve(!!blob),\n      'image/webp'\n    );\n  });\n}\n\nexport function formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 B';\n  \n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(1))} ${sizes[i]}`;\n}","import { ref } from 'vue';\nimport { validateImageFile, type ImageValidationResult } from '~/utils/imageValidator';\nimport { compressImage, type CompressionResult, formatFileSize } from '~/utils/imageCompressor';\n\nexport interface UseImageUploadOptions {\n  maxSizeBytes?: number;\n  allowedTypes?: string[];\n  maxWidth?: number;\n  maxHeight?: number;\n  compressionEnabled?: boolean;\n}\n\nexport interface ImageUploadState {\n  file: File | null;\n  previewUrl: string;\n  fileName: string;\n  isUploading: boolean;\n  error: string;\n  compressionInfo: string;\n}\n\nexport function useImageUpload(options: UseImageUploadOptions = {}) {\n  const state = ref<ImageUploadState>({\n    file: null,\n    previewUrl: '',\n    fileName: '',\n    isUploading: false,\n    error: '',\n    compressionInfo: ''\n  });\n\n  const resetState = () => {\n    if (state.value.previewUrl && state.value.previewUrl.startsWith('blob:')) {\n      URL.revokeObjectURL(state.value.previewUrl);\n    }\n    \n    state.value = {\n      file: null,\n      previewUrl: '',\n      fileName: '',\n      isUploading: false,\n      error: '',\n      compressionInfo: ''\n    };\n  };\n\n  const handleFileUpload = async (file: File): Promise<boolean> => {\n    state.value.isUploading = true;\n    state.value.error = '';\n    state.value.compressionInfo = '';\n\n    try {\n      // Validation du fichier\n      const validationResult: ImageValidationResult = await validateImageFile(file, {\n        maxSizeBytes: options.maxSizeBytes,\n        allowedTypes: options.allowedTypes,\n        maxWidth: options.maxWidth,\n        maxHeight: options.maxHeight\n      });\n\n      if (!validationResult.isValid) {\n        state.value.error = validationResult.error || 'Fichier invalide';\n        state.value.isUploading = false;\n        return false;\n      }\n\n      let finalFile = file;\n      let previewUrl = '';\n\n      // Compression si activée\n      if (options.compressionEnabled !== false) {\n        try {\n          const compressionResult: CompressionResult = await compressImage(file, {\n            maxWidth: 800,\n            maxHeight: 600,\n            quality: 0.8\n          });\n\n          finalFile = new File([compressionResult.compressedFile], file.name, {\n            type: compressionResult.compressedFile.type,\n            lastModified: Date.now()\n          });\n\n          previewUrl = compressionResult.dataUrl;\n\n          if (compressionResult.compressionRatio > 0) {\n            state.value.compressionInfo = `Compression: ${formatFileSize(compressionResult.originalSize)} → ${formatFileSize(compressionResult.compressedSize)} (-${compressionResult.compressionRatio}%)`;\n          }\n        } catch (compressionError) {\n          console.warn('Compression échouée, utilisation du fichier original:', compressionError);\n          previewUrl = URL.createObjectURL(file);\n        }\n      } else {\n        previewUrl = URL.createObjectURL(file);\n      }\n\n      // Mettre à jour l'état\n      state.value.file = finalFile;\n      state.value.previewUrl = previewUrl;\n      state.value.fileName = file.name;\n      state.value.isUploading = false;\n\n      return true;\n    } catch (error) {\n      state.value.error = error instanceof Error ? error.message : 'Erreur lors du traitement du fichier';\n      state.value.isUploading = false;\n      return false;\n    }\n  };\n\n  const getDataUrl = async (): Promise<string> => {\n    if (!state.value.file) {\n      throw new Error('Aucun fichier sélectionné');\n    }\n\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result as string);\n      reader.onerror = () => reject(new Error('Erreur lecture fichier'));\n      reader.readAsDataURL(state.value.file);\n    });\n  };\n\n  // Cleanup automatique\n  onUnmounted(() => {\n    resetState();\n  });\n\n  return {\n    state: readonly(state),\n    handleFileUpload,\n    resetState,\n    getDataUrl\n  };\n}","<script setup lang=\"ts\">\nimport type { PopoverRootEmits, PopoverRootProps } from 'reka-ui'\nimport { PopoverRoot, useForwardPropsEmits } from 'reka-ui'\n\nconst props = defineProps<PopoverRootProps>()\nconst emits = defineEmits<PopoverRootEmits>()\n\nconst forwarded = useForwardPropsEmits(props, emits)\n</script>\n\n<template>\n  <PopoverRoot v-bind=\"forwarded\">\n    <slot />\n  </PopoverRoot>\n</template>\n","<template>\n  <PopoverPortal>\n    <PopoverContent\n        v-bind=\"{ ...forwarded, ...$attrs }\"\n        :class=\"\n        cn(\n          'z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n          props.class,\n        )\n      \"\n    >\n      <slot />\n    </PopoverContent>\n  </PopoverPortal>\n</template>\n\n<script setup lang=\"ts\">\nimport { cn } from '@/lib/utils'\nimport {\n  PopoverContent,\n  type PopoverContentEmits,\n  type PopoverContentProps,\n  PopoverPortal,\n  useForwardPropsEmits,\n} from 'reka-ui'\nimport { computed, type HTMLAttributes } from 'vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(\n  defineProps<PopoverContentProps & { class?: HTMLAttributes['class'] }>(),\n  {\n    align: 'center',\n    sideOffset: 4,\n  },\n)\nconst emits = defineEmits<PopoverContentEmits>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n","<script setup lang=\"ts\">\nimport { PopoverTrigger, type PopoverTriggerProps } from 'reka-ui'\n\nconst props = defineProps<PopoverTriggerProps>()\n</script>\n\n<template>\n  <PopoverTrigger v-bind=\"props\">\n    <slot />\n  </PopoverTrigger>\n</template>\n","<template>\n  <div class=\"space-y-2\">\n    <label v-if=\"label\" :class=\"labelClasses\">\n      {{ label }}\n      <span v-if=\"required\" class=\"text-red-500 ml-1\">*</span>\n    </label>\n    \n    <Popover>\n      <PopoverTrigger as-child>\n        <Button \n          variant=\"outline\" \n          role=\"combobox\"\n          :class=\"[\n            'w-full justify-between',\n            !selectedCategory && 'text-muted-foreground',\n            isDarkMode ? 'border-gray-700 hover:bg-gray-800' : 'border-gray-300 hover:bg-gray-50'\n          ]\"\n        >\n          <div v-if=\"selectedCategory\" class=\"flex items-center gap-2\">\n            <span class=\"text-lg\">{{ selectedCategory.icon }}</span>\n            <span>{{ selectedCategory.name }}</span>\n            <span \n              class=\"w-3 h-3 rounded-full flex-shrink-0\" \n              :style=\"{ backgroundColor: selectedCategory.color }\"\n            />\n          </div>\n          <span v-else>{{ placeholder }}</span>\n          <ChevronDown class=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      \n      <PopoverContent class=\"w-80 p-0\" align=\"start\">\n        <div :class=\"isDarkMode ? 'bg-gray-900 border-gray-700' : 'bg-white border-gray-200'\">\n          <!-- Recherche -->\n          <div class=\"p-2 border-b\" :class=\"isDarkMode ? 'border-gray-700' : 'border-gray-200'\">\n            <div class=\"relative\">\n              <Search class=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n              <Input\n                v-model=\"searchQuery\"\n                placeholder=\"Rechercher une catégorie...\"\n                class=\"pl-8\"\n                :class=\"isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-300'\"\n              />\n            </div>\n          </div>\n          \n          <!-- Liste des catégories -->\n          <div class=\"max-h-60 overflow-auto\">\n            <div v-if=\"filteredCategories.length === 0\" class=\"p-4 text-center text-muted-foreground\">\n              Aucune catégorie trouvée\n            </div>\n            \n            <div v-else class=\"p-1\">\n              <!-- Catégories de dépenses -->\n              <div v-if=\"showExpenseCategories\">\n                <div class=\"px-2 py-1 text-xs font-semibold text-muted-foreground uppercase tracking-wider\">\n                  Dépenses\n                </div>\n                <Button\n                  v-for=\"category in expenseCategories\"\n                  :key=\"category.id\"\n                  variant=\"ghost\"\n                  class=\"w-full justify-start h-auto p-2 mb-1\"\n                  @click=\"selectCategory(category)\"\n                >\n                  <div class=\"flex items-center gap-3 w-full\">\n                    <span class=\"text-lg flex-shrink-0\">{{ category.icon }}</span>\n                    <div class=\"flex-1 text-left\">\n                      <div class=\"font-medium\">{{ category.name }}</div>\n                      <div v-if=\"category.description\" class=\"text-xs text-muted-foreground\">\n                        {{ category.description }}\n                      </div>\n                    </div>\n                    <span \n                      class=\"w-3 h-3 rounded-full flex-shrink-0\" \n                      :style=\"{ backgroundColor: category.color }\"\n                    />\n                  </div>\n                </Button>\n              </div>\n              \n              <!-- Catégories de revenus -->\n              <div v-if=\"showIncomeCategories\" class=\"mt-2\">\n                <div class=\"px-2 py-1 text-xs font-semibold text-muted-foreground uppercase tracking-wider\">\n                  Revenus\n                </div>\n                <Button\n                  v-for=\"category in incomeCategories\"\n                  :key=\"category.id\"\n                  variant=\"ghost\"\n                  class=\"w-full justify-start h-auto p-2 mb-1\"\n                  @click=\"selectCategory(category)\"\n                >\n                  <div class=\"flex items-center gap-3 w-full\">\n                    <span class=\"text-lg flex-shrink-0\">{{ category.icon }}</span>\n                    <div class=\"flex-1 text-left\">\n                      <div class=\"font-medium\">{{ category.name }}</div>\n                      <div v-if=\"category.description\" class=\"text-xs text-muted-foreground\">\n                        {{ category.description }}\n                      </div>\n                    </div>\n                    <span \n                      class=\"w-3 h-3 rounded-full flex-shrink-0\" \n                      :style=\"{ backgroundColor: category.color }\"\n                    />\n                  </div>\n                </Button>\n              </div>\n            </div>\n          </div>\n          \n          <!-- Actions -->\n          <div class=\"border-t p-2\" :class=\"isDarkMode ? 'border-gray-700' : 'border-gray-200'\">\n            <Button\n              v-if=\"allowClear && selectedCategory\"\n              variant=\"ghost\"\n              size=\"sm\"\n              class=\"w-full text-red-500 hover:text-red-600\"\n              @click=\"clearSelection\"\n            >\n              <X class=\"h-4 w-4 mr-2\" />\n              Aucune catégorie\n            </Button>\n          </div>\n        </div>\n      </PopoverContent>\n    </Popover>\n    \n    <!-- Message d'erreur -->\n    <div v-if=\"errorMessage\" class=\"text-sm text-red-500 mt-1\">\n      {{ errorMessage }}\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { computed, ref } from 'vue';\n  import { ChevronDown, Search, X } from 'lucide-vue-next';\n  import { Button } from '@/components/ui/button';\n  import { Input } from '@/components/ui/input';\n  import { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\n  import { useCategoriesStore } from '~/stores/categories';\n  import { useSettingsStore } from '~/stores/settings';\n  import { storeToRefs } from 'pinia';\n  import type { Category } from '~/types/categories';\n\n  interface Props {\n    modelValue?: string;\n    label?: string;\n    placeholder?: string;\n    required?: boolean;\n    allowClear?: boolean;\n    filterType?: 'all' | 'expense' | 'income';\n    errorMessage?: string;\n  }\n\n  const props = withDefaults(defineProps<Props>(), {\n    placeholder: 'Sélectionner une catégorie',\n    allowClear: true,\n    filterType: 'all'\n  });\n\n  const emit = defineEmits<{\n    'update:modelValue': [value: string | undefined];\n    'change': [category: Category | undefined];\n  }>();\n\n  const categoriesStore = useCategoriesStore();\n  const settingsStore = useSettingsStore();\n  const { isDarkMode } = storeToRefs(settingsStore);\n\n  const searchQuery = ref('');\n\n  // Classes pour le label\n  const labelClasses = computed(() => [\n    'text-sm font-medium',\n    isDarkMode.value ? 'text-white' : 'text-gray-900'\n  ]);\n\n  // Catégorie sélectionnée\n  const selectedCategory = computed(() => {\n    if (!props.modelValue) return null;\n    return categoriesStore.getCategoryById(props.modelValue);\n  });\n\n  // Categories filtrées par recherche\n  const filteredCategories = computed(() => {\n    let categories = categoriesStore.sortedCategories;\n    \n    if (searchQuery.value) {\n      const query = searchQuery.value.toLowerCase();\n      categories = categories.filter(cat => \n        cat.name.toLowerCase().includes(query) ||\n        cat.description?.toLowerCase().includes(query)\n      );\n    }\n    \n    return categories;\n  });\n\n  // Catégories de dépenses filtrées\n  const expenseCategories = computed(() => {\n    if (props.filterType === 'income') return [];\n    return filteredCategories.value.filter(cat => cat.order < 10);\n  });\n\n  // Catégories de revenus filtrées\n  const incomeCategories = computed(() => {\n    if (props.filterType === 'expense') return [];\n    return filteredCategories.value.filter(cat => cat.order >= 10 && cat.order < 90);\n  });\n\n  // Affichage conditionnel des sections\n  const showExpenseCategories = computed(() => {\n    return expenseCategories.value.length > 0;\n  });\n\n  const showIncomeCategories = computed(() => {\n    return incomeCategories.value.length > 0;\n  });\n\n  // Sélectionner une catégorie\n  const selectCategory = (category: Category) => {\n    emit('update:modelValue', category.id);\n    emit('change', category);\n    searchQuery.value = '';\n  };\n\n  // Effacer la sélection\n  const clearSelection = () => {\n    emit('update:modelValue', undefined);\n    emit('change', undefined);\n    searchQuery.value = '';\n  };\n</script>","<template>\n  <div class=\"space-y-2\">\n    <label v-if=\"label\" :class=\"labelClasses\">\n      {{ label }}\n    </label>\n    \n    <div class=\"space-y-2\">\n      <!-- Tags sélectionnés -->\n      <div v-if=\"selectedTags.length > 0\" class=\"flex flex-wrap gap-1\">\n        <span\n          v-for=\"tag in selectedTags\"\n          :key=\"tag.id\"\n          class=\"inline-flex items-center gap-1 px-2 py-1 rounded-full text-xs font-medium cursor-pointer\"\n          :style=\"{ \n            backgroundColor: `${tag.color}20`, \n            color: tag.color,\n            border: `1px solid ${tag.color}40`\n          }\"\n          @click=\"removeTag(tag.id)\"\n        >\n          {{ tag.name }}\n          <X class=\"h-3 w-3 hover:bg-red-500 hover:text-white rounded-full\" />\n        </span>\n      </div>\n      \n      <!-- Input pour nouveaux tags -->\n      <Popover v-model:open=\"isOpen\">\n        <PopoverTrigger as-child>\n          <Button \n            variant=\"outline\" \n            class=\"w-full justify-between h-auto min-h-[2.5rem] p-2\"\n            :class=\"isDarkMode ? 'border-gray-700 hover:bg-gray-800' : 'border-gray-300 hover:bg-gray-50'\"\n          >\n            <div class=\"flex items-center gap-2\">\n              <Tag class=\"h-4 w-4 opacity-50\" />\n              <span class=\"text-sm text-muted-foreground\">\n                {{ selectedTags.length > 0 ? `${selectedTags.length} tag(s) sélectionné(s)` : placeholder }}\n              </span>\n            </div>\n            <ChevronDown class=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n          </Button>\n        </PopoverTrigger>\n        \n        <PopoverContent class=\"w-80 p-0\" align=\"start\">\n          <div :class=\"isDarkMode ? 'bg-gray-900 border-gray-700' : 'bg-white border-gray-200'\">\n            <!-- Recherche/Création -->\n            <div class=\"p-2 border-b\" :class=\"isDarkMode ? 'border-gray-700' : 'border-gray-200'\">\n              <div class=\"relative\">\n                <Search class=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n                <Input\n                  v-model=\"searchQuery\"\n                  placeholder=\"Rechercher ou créer un tag...\"\n                  class=\"pl-8\"\n                  :class=\"isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-300'\"\n                  @keydown.enter.prevent=\"handleEnter\"\n                />\n              </div>\n              \n              <!-- Bouton pour créer un nouveau tag -->\n              <Button\n                v-if=\"searchQuery && !exactMatch && allowCreate\"\n                variant=\"ghost\"\n                size=\"sm\"\n                class=\"w-full mt-2 justify-start text-green-600 hover:text-green-700\"\n                @click=\"createNewTag\"\n              >\n                <Plus class=\"h-4 w-4 mr-2\" />\n                Créer \"{{ searchQuery }}\"\n              </Button>\n            </div>\n            \n            <!-- Liste des tags -->\n            <div class=\"max-h-48 overflow-auto\">\n              <div v-if=\"filteredTags.length === 0 && !searchQuery\" class=\"p-4 text-center text-muted-foreground text-sm\">\n                Aucun tag disponible\n              </div>\n              \n              <div v-else-if=\"filteredTags.length === 0 && searchQuery && !allowCreate\" class=\"p-4 text-center text-muted-foreground text-sm\">\n                Aucun tag trouvé\n              </div>\n              \n              <div v-else class=\"p-1\">\n                <Button\n                  v-for=\"tag in filteredTags\"\n                  :key=\"tag.id\"\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  class=\"w-full justify-start mb-1\"\n                  :class=\"isSelected(tag.id) ? 'bg-accent' : ''\"\n                  @click=\"toggleTag(tag)\"\n                >\n                  <span\n                    class=\"w-3 h-3 rounded-full mr-2 flex-shrink-0\"\n                    :style=\"{ backgroundColor: tag.color }\"\n                  />\n                  {{ tag.name }}\n                  <Check v-if=\"isSelected(tag.id)\" class=\"ml-auto h-4 w-4\" />\n                </Button>\n              </div>\n            </div>\n          </div>\n        </PopoverContent>\n      </Popover>\n    </div>\n    \n    <!-- Message d'erreur -->\n    <div v-if=\"errorMessage\" class=\"text-sm text-red-500 mt-1\">\n      {{ errorMessage }}\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { computed, ref } from 'vue';\n  import { ChevronDown, Search, X, Plus, Check, Tag } from 'lucide-vue-next';\n  import { Button } from '@/components/ui/button';\n  import { Input } from '@/components/ui/input';\n  import { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\n  import { useCategoriesStore } from '~/stores/categories';\n  import { useSettingsStore } from '~/stores/settings';\n  import { storeToRefs } from 'pinia';\n  import type { Tag as TagType } from '~/types/categories';\n\n  interface Props {\n    modelValue?: string[];\n    label?: string;\n    placeholder?: string;\n    allowCreate?: boolean;\n    maxTags?: number;\n    errorMessage?: string;\n  }\n\n  const props = withDefaults(defineProps<Props>(), {\n    modelValue: () => [],\n    placeholder: 'Sélectionner des tags',\n    allowCreate: true,\n    maxTags: 5\n  });\n\n  const emit = defineEmits<{\n    'update:modelValue': [value: string[]];\n    'change': [tags: TagType[]];\n  }>();\n\n  const categoriesStore = useCategoriesStore();\n  const settingsStore = useSettingsStore();\n  const { isDarkMode } = storeToRefs(settingsStore);\n\n  const searchQuery = ref('');\n  const isOpen = ref(false);\n\n  // Couleurs disponibles pour les nouveaux tags\n  const tagColors = [\n    '#3B82F6', '#EF4444', '#10B981', '#F59E0B', '#8B5CF6',\n    '#EC4899', '#06B6D4', '#84CC16', '#F97316', '#6366F1'\n  ];\n\n  // Classes pour le label\n  const labelClasses = computed(() => [\n    'text-sm font-medium',\n    isDarkMode.value ? 'text-white' : 'text-gray-900'\n  ]);\n\n  // Tags sélectionnés\n  const selectedTags = computed(() => {\n    return props.modelValue\n      .map(id => categoriesStore.getTagById(id))\n      .filter(Boolean) as TagType[];\n  });\n\n  // Tags filtrés par recherche\n  const filteredTags = computed(() => {\n    let tags = categoriesStore.tags;\n    \n    if (searchQuery.value) {\n      const query = searchQuery.value.toLowerCase();\n      tags = tags.filter(tag => \n        tag.name.toLowerCase().includes(query)\n      );\n    }\n    \n    return tags;\n  });\n\n  // Vérifier si un tag existe exactement\n  const exactMatch = computed(() => {\n    if (!searchQuery.value) return false;\n    return categoriesStore.tags.some(tag => \n      tag.name.toLowerCase() === searchQuery.value.toLowerCase()\n    );\n  });\n\n  // Vérifier si un tag est sélectionné\n  const isSelected = (tagId: string) => {\n    return props.modelValue.includes(tagId);\n  };\n\n  // Basculer la sélection d'un tag\n  const toggleTag = (tag: TagType) => {\n    const newValues = isSelected(tag.id)\n      ? props.modelValue.filter(id => id !== tag.id)\n      : [...props.modelValue, tag.id];\n\n    // Vérifier la limite\n    if (newValues.length > props.maxTags) {\n      return;\n    }\n\n    emit('update:modelValue', newValues);\n    emit('change', newValues.map(id => categoriesStore.getTagById(id)).filter(Boolean) as TagType[]);\n  };\n\n  // Supprimer un tag\n  const removeTag = (tagId: string) => {\n    const newValues = props.modelValue.filter(id => id !== tagId);\n    emit('update:modelValue', newValues);\n    emit('change', newValues.map(id => categoriesStore.getTagById(id)).filter(Boolean) as TagType[]);\n  };\n\n  // Créer un nouveau tag\n  const createNewTag = async () => {\n    if (!searchQuery.value.trim()) return;\n    \n    try {\n      // Choisir une couleur aléatoire\n      const randomColor = tagColors[Math.floor(Math.random() * tagColors.length)];\n      \n      const newTag = categoriesStore.addTag({\n        name: searchQuery.value.trim(),\n        color: randomColor\n      });\n\n      // Ajouter le nouveau tag à la sélection\n      const newValues = [...props.modelValue, newTag.id];\n      emit('update:modelValue', newValues);\n      emit('change', newValues.map(id => categoriesStore.getTagById(id)).filter(Boolean) as TagType[]);\n\n      // Réinitialiser la recherche\n      searchQuery.value = '';\n    } catch (error) {\n      console.error('Erreur création tag:', error);\n    }\n  };\n\n  // Gérer la touche Entrée\n  const handleEnter = () => {\n    if (searchQuery.value && !exactMatch.value && props.allowCreate) {\n      createNewTag();\n    }\n  };\n</script>","<template>\n  <Dialog :open=\"isOpen\" @update:open=\"$emit('update:isOpen', $event)\">\n    <DialogContent :class=\"[\n      'p-0 w-full sm:max-w-[500px] max-h-[90vh] overflow-y-auto',\n      isDarkMode ? 'bg-gray-900 border-gray-800' : 'bg-white border-slate-200'\n    ]\">\n      <DialogHeader :class=\"[\n        'sticky top-0 z-10 p-4 sm:p-6 border-b',\n        isDarkMode ? 'border-gray-800 bg-gray-900' : 'border-slate-200 bg-white'\n      ]\">\n        <DialogTitle :class=\"[\n          'text-xl sm:text-2xl font-semibold',\n          isDarkMode ? 'text-white' : 'text-slate-900'\n        ]\">\n          Ajouter un mouvement\n        </DialogTitle>\n      </DialogHeader>\n\n      <div class=\"p-4 sm:p-6 space-y-4 sm:space-y-6\">\n        <div class=\"space-y-2 sm:space-y-3\">\n          <label :class=\"[\n            'text-sm font-medium',\n            isDarkMode ? 'text-white' : 'text-slate-900'\n          ]\">\n            Type de mouvement\n          </label>\n          <div class=\"grid grid-cols-2 gap-2\">\n            <button\n                type=\"button\"\n                :class=\"[\n                'w-full px-3 py-2 rounded-md text-sm sm:text-base',\n                newMovement.type === 'expense'\n                  ? 'bg-red-500 hover:bg-red-600 text-white'\n                  : 'border bg-slate-100',\n\n              ]\"\n                @click=\"newMovement.type = 'expense'\"\n            >\n              Dépense\n            </button>\n            <button\n                type=\"button\"\n                :class=\"[\n                'w-full px-3 py-2 rounded-md text-sm sm:text-base',\n                newMovement.type === 'income'\n                  ? 'bg-emerald-500 hover:bg-emerald-600 text-white'\n                  : 'border bg-slate-100'\n              ]\"\n                @click=\"newMovement.type = 'income'\"\n            >\n              Revenu\n            </button>\n          </div>\n        </div>\n\n        <div class=\"space-y-3 sm:space-y-4\">\n          <div class=\"space-y-1 sm:space-y-2\">\n            <label :class=\"isDarkMode ? 'text-white' : 'text-slate-900'\">Nom</label>\n            <Input\n                v-model=\"newMovement.name\"\n                type=\"text\"\n                placeholder=\"Ex: Loyer, Salaire...\"\n                :class=\"[\n                isDarkMode ? 'bg-gray-800 border-gray-700 text-white' : 'bg-white border-slate-200'\n              ]\"\n            />\n          </div>\n\n          <div class=\"space-y-1 sm:space-y-2\">\n            <label :class=\"isDarkMode ? 'text-white' : 'text-slate-900'\">Montant</label>\n            <div class=\"relative\">\n              <Input\n                  v-model=\"newMovement.amount\"\n                  type=\"number\"\n                  placeholder=\"0.00\"\n                  class=\"pl-8\"\n                  :class=\"[\n                  isDarkMode ? 'bg-gray-800 border-gray-700 text-white' : 'bg-white border-slate-200'\n                ]\"\n              />\n              <span class=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-500\">€</span>\n            </div>\n          </div>\n\n          <div class=\"space-y-1 sm:space-y-2\">\n            <label :class=\"isDarkMode ? 'text-white' : 'text-slate-900'\">Date</label>\n            <Input\n                v-model=\"dateString\"\n                type=\"date\"\n                :class=\"[\n                isDarkMode ? 'bg-gray-800 border-gray-700 text-white' : 'bg-white border-slate-200'\n              ]\"\n            />\n          </div>\n\n          <!-- Catégorie -->\n          <div class=\"space-y-1 sm:space-y-2\">\n            <CategorySelect\n              v-model=\"newMovement.categoryId\"\n              label=\"Catégorie\"\n              :filter-type=\"newMovement.type\"\n            />\n          </div>\n\n          <!-- Tags -->\n          <div class=\"space-y-1 sm:space-y-2\">\n            <TagSelect\n              v-model=\"newMovement.tags\"\n              label=\"Tags (optionnel)\"\n              :max-tags=\"3\"\n            />\n          </div>\n\n          <!-- Description -->\n          <div class=\"space-y-1 sm:space-y-2\">\n            <label :class=\"isDarkMode ? 'text-white' : 'text-slate-900'\">Description (optionnel)</label>\n            <Input\n                v-model=\"newMovement.description\"\n                type=\"text\"\n                placeholder=\"Description du mouvement...\"\n                :class=\"[\n                isDarkMode ? 'bg-gray-800 border-gray-700 text-white' : 'bg-white border-slate-200'\n              ]\"\n            />\n          </div>\n\n          <div class=\"space-y-1 sm:space-y-2\">\n            <label :class=\"isDarkMode ? 'text-white' : 'text-slate-900'\">Image (optionnel)</label>\n            <div class=\"flex flex-wrap items-center gap-2\">\n              <input\n                  type=\"file\"\n                  id=\"image\"\n                  accept=\"image/*\"\n                  @change=\"handleImageUpload\"\n                  class=\"hidden\"\n                  ref=\"fileInput\"\n              />\n              <button\n                  type=\"button\"\n                  @click=\"$refs.fileInput.click()\"\n                  :class=\"[\n                  'px-3 py-2 rounded-md flex items-center gap-1 text-sm sm:text-base',\n                  isDarkMode ? 'bg-gray-800 hover:bg-gray-700 text-white' : 'bg-gray-100 hover:bg-gray-200 text-gray-700'\n                ]\"\n              >\n                <span>Choisir une image</span>\n              </button>\n              <span class=\"text-sm\" :class=\"isDarkMode ? 'text-gray-400' : 'text-gray-500'\">\n                {{ imageUpload.state.value.fileName || 'Aucun fichier sélectionné' }}\n              </span>\n            </div>\n\n            <div v-if=\"imageUpload.state.value.previewUrl\" class=\"mt-2 relative\">\n              <img :src=\"imageUpload.state.value.previewUrl\" alt=\"Prévisualisation\" class=\"h-24 w-auto object-cover rounded-md\" />\n              <button\n                  type=\"button\"\n                  @click=\"removeImage\"\n                  class=\"absolute top-1 right-1 bg-red-500 text-white rounded-full \"\n              >\n                <span class=\"items-center justify-center\"><CircleX/></span>\n              </button>\n            </div>\n            \n            <!-- Affichage des erreurs et informations de compression -->\n            <div v-if=\"imageUpload.state.value.error\" class=\"mt-2\">\n              <Alert variant=\"destructive\">\n                <AlertDescription>\n                  {{ imageUpload.state.value.error }}\n                </AlertDescription>\n              </Alert>\n            </div>\n            \n            <div v-if=\"imageUpload.state.value.compressionInfo\" class=\"mt-1\">\n              <div class=\"text-xs flex items-center gap-1\" :class=\"isDarkMode ? 'text-green-400' : 'text-green-600'\">\n                <Check class=\"h-3 w-3\" />\n                {{ imageUpload.state.value.compressionInfo }}\n              </div>\n            </div>\n            \n            <div v-if=\"imageUpload.state.value.isUploading\" class=\"mt-2\">\n              <div class=\"flex items-center gap-2 text-sm\" :class=\"isDarkMode ? 'text-gray-400' : 'text-gray-600'\">\n                <Upload class=\"h-4 w-4 animate-pulse\" />\n                Traitement en cours...\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"space-y-2 sm:space-y-3\">\n          <label :class=\"[\n            'text-sm font-medium',\n            isDarkMode ? 'text-white' : 'text-slate-900'\n          ]\">\n            Type de récurrence\n          </label>\n          <div class=\"grid grid-cols-1 gap-2\">\n            <Button\n                variant=\"outline\"\n                :class=\"[\n                'justify-start py-1 sm:py-2 text-sm sm:text-base',\n                !newMovement.isRecurrent\n                  ? 'bg-emerald-500 hover:bg-emerald-600 text-white'\n                  : ''\n              ]\"\n                @click=\"newMovement.isRecurrent = false\"\n            >\n              <span class=\"mr-2\">🔄</span> Pas de récurrence\n            </Button>\n            <Button\n                variant=\"outline\"\n                :class=\"[\n                'justify-start py-1 sm:py-2 text-sm sm:text-base',\n                newMovement.isRecurrent\n                  ? 'bg-emerald-500 hover:bg-emerald-600 text-white'\n                  : ''\n              ]\"\n                @click=\"newMovement.isRecurrent = true\"\n            >\n              <span class=\"mr-2\">📅</span> Mensuel\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <DialogFooter :class=\"[\n        'sticky bottom-0 z-10 p-4 sm:p-6 border-t',\n        isDarkMode ? 'border-gray-800 bg-gray-900' : 'border-slate-200 bg-white'\n      ]\">\n        <Button\n            class=\"w-full bg-emerald-500 hover:bg-emerald-600 text-white\"\n            @click=\"handleAddMovement\"\n            :disabled=\"imageUpload.state.value.isUploading\"\n        >\n          {{ imageUpload.state.value.isUploading ? 'Traitement...' : 'Ajouter' }}\n        </Button>\n      </DialogFooter>\n    </DialogContent>\n  </Dialog>\n</template>\n\n<script setup lang=\"ts\">\n  import type { AddMovementDialogProps, NewMovement } from '@/types/finance';\n  import {\n    Dialog,\n    DialogContent,\n    DialogFooter,\n    DialogHeader,\n    DialogTitle\n  } from '@/components/ui/dialog';\n  import { Button } from '@/components/ui/button';\n  import { Input } from '@/components/ui/input';\n  import { Alert, AlertDescription } from '@/components/ui/alert';\n  import { CircleX, Upload, Check } from 'lucide-vue-next';\n  import { useImageUpload } from '~/composables/useImageUpload';\n  import CategorySelect from '~/components/categories/CategorySelect.vue';\n  import TagSelect from '~/components/categories/TagSelect.vue';\n\n\n  const props = defineProps<AddMovementDialogProps>();\n  const emit = defineEmits(['update:isOpen', 'addMovement']);\n\n  const fileInput = ref<HTMLInputElement | null>(null);\n  const dateString = ref('');\n  \n  // Utilisation du composable pour l'upload d'images\n  const imageUpload = useImageUpload({\n    maxSizeBytes: 2 * 1024 * 1024, // 2MB\n    allowedTypes: ['image/jpeg', 'image/png', 'image/webp'],\n    compressionEnabled: true\n  });\n\n  const newMovement = ref<NewMovement>({\n    name: '',\n    amount: 0,\n    date: '',\n    type: 'expense',\n    isRecurrent: false,\n    imageUrl: '',\n    categoryId: undefined,\n    tags: [],\n    description: ''\n  });\n\n  watch(dateString, (newValue) => {\n    newMovement.value.date = newValue;\n  });\n\n  const handleImageUpload = async (event: Event) => {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n      await imageUpload.handleFileUpload(file);\n    }\n  };\n\n  const removeImage = () => {\n    imageUpload.resetState();\n    newMovement.value.imageUrl = '';\n    if (fileInput.value) {\n      fileInput.value.value = '';\n    }\n  };\n\n  const handleAddMovement = async () => {\n    if (!newMovement.value.name || !newMovement.value.amount || !newMovement.value.date) {\n      return;\n    }\n\n    try {\n      // Obtenir l'URL de données si une image est présente\n      if (imageUpload.state.value.file) {\n        newMovement.value.imageUrl = await imageUpload.getDataUrl();\n      }\n\n      emit('addMovement', { ...newMovement.value });\n\n      // Reset du formulaire\n      newMovement.value = {\n        name: '',\n        amount: 0,\n        date: '',\n        type: 'expense',\n        isRecurrent: false,\n        imageUrl: '',\n        categoryId: undefined,\n        tags: [],\n        description: ''\n      };\n      dateString.value = '';\n      removeImage();\n    } catch (error) {\n      console.error('Erreur lors de l\\'ajout du mouvement:', error);\n    }\n  };\n</script>","export const formatCurrency = (amount: number): string => {\n    return new Intl.NumberFormat('fr-FR', {\n        style: 'currency',\n        currency: 'EUR'\n    }).format(amount);\n};\n\nexport const formatDate = (date?: Date): string => {\n    if (!date) return '';\n    return date.toLocaleDateString('fr-FR');\n};\n\nexport const formatMonthYear = (date?: Date): string => {\n    if (!date) return '';\n    return date.toLocaleDateString('fr-FR', {\n        month: 'long',\n        year: 'numeric'\n    });\n};\n\nexport const formatFullDate = (date?: Date): string => {\n    if (!date) return '';\n    return date.toLocaleDateString('fr-FR', {\n        weekday: 'long',\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric'\n    });\n};","import { ref, computed, watch, readonly } from 'vue';\nimport type { Movement } from '~/types/finance';\nimport type { Category, Tag } from '~/types/categories';\n\nexport interface MovementFilters {\n  searchQuery: string;\n  type: 'all' | 'income' | 'expense';\n  categoryIds: string[];\n  tagIds: string[];\n  dateRange: {\n    start: Date | null;\n    end: Date | null;\n  };\n  amountRange: {\n    min: number | null;\n    max: number | null;\n  };\n  isRecurrent: 'all' | 'yes' | 'no';\n}\n\nexport interface FilterStats {\n  totalCount: number;\n  filteredCount: number;\n  totalAmount: number;\n  filteredAmount: number;\n  categories: Map<string, number>;\n  tags: Map<string, number>;\n}\n\nexport function useMovementFilters(movements: Ref<Movement[]>) {\n  // État des filtres\n  const filters = ref<MovementFilters>({\n    searchQuery: '',\n    type: 'all',\n    categoryIds: [],\n    tagIds: [],\n    dateRange: {\n      start: null,\n      end: null\n    },\n    amountRange: {\n      min: null,\n      max: null\n    },\n    isRecurrent: 'all'\n  });\n\n  // Mouvements filtrés\n  const filteredMovements = computed(() => {\n    if (!movements.value || !Array.isArray(movements.value)) {\n      return [];\n    }\n    \n    // Filtrer les mouvements valides (avec un ID)\n    let result = movements.value.filter(m => m && (m.id !== undefined && m.id !== null));\n\n    // Filtre par recherche textuelle\n    if (filters.value.searchQuery) {\n      const query = filters.value.searchQuery.toLowerCase();\n      result = result.filter(movement => \n        movement.name.toLowerCase().includes(query) ||\n        movement.description?.toLowerCase().includes(query)\n      );\n    }\n\n    // Filtre par type\n    if (filters.value.type !== 'all') {\n      result = result.filter(movement => movement.type === filters.value.type);\n    }\n\n    // Filtre par catégories\n    if (filters.value.categoryIds.length > 0) {\n      result = result.filter(movement => \n        movement.categoryId && filters.value.categoryIds.includes(movement.categoryId)\n      );\n    }\n\n    // Filtre par tags\n    if (filters.value.tagIds.length > 0) {\n      result = result.filter(movement => \n        movement.tags?.some(tagId => filters.value.tagIds.includes(tagId))\n      );\n    }\n\n    // Filtre par plage de dates\n    if (filters.value.dateRange.start || filters.value.dateRange.end) {\n      result = result.filter(movement => {\n        const movementDate = movement.date instanceof Date ? movement.date : new Date(movement.date);\n        \n        if (filters.value.dateRange.start && movementDate < filters.value.dateRange.start) {\n          return false;\n        }\n        \n        if (filters.value.dateRange.end && movementDate > filters.value.dateRange.end) {\n          return false;\n        }\n        \n        return true;\n      });\n    }\n\n    // Filtre par plage de montants\n    if (filters.value.amountRange.min !== null || filters.value.amountRange.max !== null) {\n      result = result.filter(movement => {\n        const amount = Math.abs(movement.amount);\n        \n        if (filters.value.amountRange.min !== null && amount < filters.value.amountRange.min) {\n          return false;\n        }\n        \n        if (filters.value.amountRange.max !== null && amount > filters.value.amountRange.max) {\n          return false;\n        }\n        \n        return true;\n      });\n    }\n\n    // Filtre par récurrence\n    if (filters.value.isRecurrent !== 'all') {\n      const isRecurrentFilter = filters.value.isRecurrent === 'yes';\n      result = result.filter(movement => \n        (movement.isRecurrent || movement.isGeneratedRecurrence) === isRecurrentFilter\n      );\n    }\n\n    // Trier par date (plus récents en premier)\n    result.sort((a, b) => {\n      const dateA = a.date instanceof Date ? a.date : new Date(a.date);\n      const dateB = b.date instanceof Date ? b.date : new Date(b.date);\n      return dateB.getTime() - dateA.getTime();\n    });\n\n    return result;\n  });\n\n  // Statistiques des filtres\n  const filterStats = computed((): FilterStats => {\n    const movs = movements.value || [];\n    const filtered = filteredMovements.value || [];\n    \n    const totalCount = movs.length;\n    const filteredCount = filtered.length;\n    \n    const totalAmount = movs.reduce((sum, m) => sum + Math.abs(m.amount), 0);\n    const filteredAmount = filtered.reduce((sum, m) => sum + Math.abs(m.amount), 0);\n\n    // Statistiques par catégories\n    const categories = new Map<string, number>();\n    filtered.forEach(movement => {\n      if (movement.categoryId) {\n        const current = categories.get(movement.categoryId) || 0;\n        categories.set(movement.categoryId, current + 1);\n      }\n    });\n\n    // Statistiques par tags\n    const tags = new Map<string, number>();\n    filtered.forEach(movement => {\n      movement.tags?.forEach(tagId => {\n        const current = tags.get(tagId) || 0;\n        tags.set(tagId, current + 1);\n      });\n    });\n\n    return {\n      totalCount,\n      filteredCount,\n      totalAmount,\n      filteredAmount,\n      categories,\n      tags\n    };\n  });\n\n  // Suggestions de recherche basées sur l'historique\n  const searchSuggestions = computed(() => {\n    if (!filters.value.searchQuery || filters.value.searchQuery.length < 2) {\n      return [];\n    }\n\n    const movs = movements.value || [];\n    const query = filters.value.searchQuery.toLowerCase();\n    const suggestions = new Set<string>();\n\n    movs.forEach(movement => {\n      // Suggestions basées sur les noms\n      if (movement.name.toLowerCase().includes(query)) {\n        suggestions.add(movement.name);\n      }\n\n      // Suggestions basées sur les descriptions\n      if (movement.description?.toLowerCase().includes(query)) {\n        suggestions.add(movement.description);\n      }\n    });\n\n    return Array.from(suggestions).slice(0, 5);\n  });\n\n  // Filtres rapides prédéfinis\n  const quickFilters = {\n    thisMonth: () => {\n      const now = new Date();\n      const start = new Date(now.getFullYear(), now.getMonth(), 1);\n      const end = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n      \n      setDateRange(start, end);\n    },\n\n    lastMonth: () => {\n      const now = new Date();\n      const start = new Date(now.getFullYear(), now.getMonth() - 1, 1);\n      const end = new Date(now.getFullYear(), now.getMonth(), 0);\n      \n      setDateRange(start, end);\n    },\n\n    thisYear: () => {\n      const now = new Date();\n      const start = new Date(now.getFullYear(), 0, 1);\n      const end = new Date(now.getFullYear(), 11, 31);\n      \n      setDateRange(start, end);\n    },\n\n    lastWeek: () => {\n      const now = new Date();\n      const start = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n      const end = now;\n      \n      setDateRange(start, end);\n    },\n\n    expensesOnly: () => {\n      filters.value.type = 'expense';\n    },\n\n    incomeOnly: () => {\n      filters.value.type = 'income';\n    },\n\n    recurrentOnly: () => {\n      filters.value.isRecurrent = 'yes';\n    },\n\n    highAmounts: () => {\n      // Filtrer les montants > 100€\n      filters.value.amountRange.min = 100;\n    }\n  };\n\n  // Actions pour modifier les filtres\n  const setSearchQuery = (query: string) => {\n    filters.value.searchQuery = query;\n  };\n\n  const setType = (type: 'all' | 'income' | 'expense') => {\n    filters.value.type = type;\n  };\n\n  const setCategoryIds = (categoryIds: string[]) => {\n    filters.value.categoryIds = categoryIds;\n  };\n\n  const setTagIds = (tagIds: string[]) => {\n    filters.value.tagIds = tagIds;\n  };\n\n  const setDateRange = (start: Date | null, end: Date | null) => {\n    filters.value.dateRange.start = start;\n    filters.value.dateRange.end = end;\n  };\n\n  const setAmountRange = (min: number | null, max: number | null) => {\n    filters.value.amountRange.min = min;\n    filters.value.amountRange.max = max;\n  };\n\n  const setRecurrentFilter = (isRecurrent: 'all' | 'yes' | 'no') => {\n    filters.value.isRecurrent = isRecurrent;\n  };\n\n  // Réinitialiser tous les filtres\n  const clearAllFilters = () => {\n    filters.value = {\n      searchQuery: '',\n      type: 'all',\n      categoryIds: [],\n      tagIds: [],\n      dateRange: {\n        start: null,\n        end: null\n      },\n      amountRange: {\n        min: null,\n        max: null\n      },\n      isRecurrent: 'all'\n    };\n  };\n\n  // Réinitialiser un filtre spécifique\n  const clearFilter = (filterType: keyof MovementFilters) => {\n    switch (filterType) {\n      case 'searchQuery':\n        filters.value.searchQuery = '';\n        break;\n      case 'type':\n        filters.value.type = 'all';\n        break;\n      case 'categoryIds':\n        filters.value.categoryIds = [];\n        break;\n      case 'tagIds':\n        filters.value.tagIds = [];\n        break;\n      case 'dateRange':\n        filters.value.dateRange = { start: null, end: null };\n        break;\n      case 'amountRange':\n        filters.value.amountRange = { min: null, max: null };\n        break;\n      case 'isRecurrent':\n        filters.value.isRecurrent = 'all';\n        break;\n    }\n  };\n\n  // Vérifier si des filtres sont actifs\n  const hasActiveFilters = computed(() => {\n    return (\n      filters.value.searchQuery !== '' ||\n      filters.value.type !== 'all' ||\n      filters.value.categoryIds.length > 0 ||\n      filters.value.tagIds.length > 0 ||\n      filters.value.dateRange.start !== null ||\n      filters.value.dateRange.end !== null ||\n      filters.value.amountRange.min !== null ||\n      filters.value.amountRange.max !== null ||\n      filters.value.isRecurrent !== 'all'\n    );\n  });\n\n  // Sauvegarder/charger les filtres (optionnel)\n  const saveFiltersToStorage = () => {\n    if (process.client) {\n      localStorage.setItem('movementFilters', JSON.stringify(filters.value));\n    }\n  };\n\n  const loadFiltersFromStorage = () => {\n    if (process.client) {\n      const saved = localStorage.getItem('movementFilters');\n      if (saved) {\n        try {\n          const parsedFilters = JSON.parse(saved);\n          // Reconvertir les dates\n          if (parsedFilters.dateRange) {\n            parsedFilters.dateRange.start = parsedFilters.dateRange.start \n              ? new Date(parsedFilters.dateRange.start) \n              : null;\n            parsedFilters.dateRange.end = parsedFilters.dateRange.end \n              ? new Date(parsedFilters.dateRange.end) \n              : null;\n          }\n          filters.value = { ...filters.value, ...parsedFilters };\n        } catch (error) {\n          console.error('Erreur chargement filtres:', error);\n        }\n      }\n    }\n  };\n\n  // Sauvegarder automatiquement les filtres\n  watch(filters, () => {\n    saveFiltersToStorage();\n  }, { deep: true });\n\n  return {\n    // État\n    filters: readonly(filters),\n    filteredMovements,\n    filterStats,\n    searchSuggestions,\n    hasActiveFilters,\n\n    // Actions\n    setSearchQuery,\n    setType,\n    setCategoryIds,\n    setTagIds,\n    setDateRange,\n    setAmountRange,\n    setRecurrentFilter,\n    clearAllFilters,\n    clearFilter,\n\n    // Filtres rapides\n    quickFilters,\n\n    // Persistance\n    saveFiltersToStorage,\n    loadFiltersFromStorage\n  };\n}","<template>\n  <Dialog :open=\"isOpen\" @update:open=\"$emit('update:isOpen', $event)\">\n    <DialogContent :class=\"[\n      'p-0 w-full sm:max-w-[500px] max-h-[90vh] overflow-y-auto',\n      isDarkMode ? 'bg-gray-900 border-gray-800' : 'bg-white border-slate-200'\n    ]\">\n      <DialogHeader :class=\"[\n        'sticky top-0 z-10 p-4 sm:p-6 border-b',\n        isDarkMode ? 'border-gray-800 bg-gray-900' : 'border-slate-200 bg-white'\n      ]\">\n        <DialogTitle :class=\"[\n          'text-xl sm:text-2xl font-semibold',\n          isDarkMode ? 'text-white' : 'text-slate-900'\n        ]\">\n          Modifier un mouvement\n        </DialogTitle>\n      </DialogHeader>\n\n      <div class=\"p-4 sm:p-6 space-y-4 sm:space-y-6\">\n        <div class=\"space-y-2 sm:space-y-3\">\n          <label :class=\"[\n            'text-sm font-medium',\n            isDarkMode ? 'text-white' : 'text-slate-900'\n          ]\">\n            Type de mouvement\n          </label>\n          <div class=\"grid grid-cols-2 gap-2\">\n            <button\n                type=\"button\"\n                :class=\"[\n                'w-full px-3 py-2 rounded-md text-sm sm:text-base',\n                editedMovement.type === 'expense'\n                  ? 'bg-red-500 hover:bg-red-600 text-white'\n                  : 'border bg-slate-100',\n\n              ]\"\n                @click=\"editedMovement.type = 'expense'\"\n            >\n              Dépense\n            </button>\n            <button\n                type=\"button\"\n                :class=\"[\n                'w-full px-3 py-2 rounded-md text-sm sm:text-base',\n                editedMovement.type === 'income'\n                  ? 'bg-emerald-500 hover:bg-emerald-600 text-white'\n                  : 'border bg-slate-100'\n              ]\"\n                @click=\"editedMovement.type = 'income'\"\n            >\n              Revenu\n            </button>\n          </div>\n        </div>\n\n        <div class=\"space-y-3 sm:space-y-4\">\n          <div class=\"space-y-1 sm:space-y-2\">\n            <label :class=\"isDarkMode ? 'text-white' : 'text-slate-900'\">Nom</label>\n            <Input\n                v-model=\"editedMovement.name\"\n                type=\"text\"\n                placeholder=\"Ex: Loyer, Salaire...\"\n                :class=\"[\n                isDarkMode ? 'bg-gray-800 border-gray-700 text-white' : 'bg-white border-slate-200'\n              ]\"\n            />\n          </div>\n\n          <div class=\"space-y-1 sm:space-y-2\">\n            <label :class=\"isDarkMode ? 'text-white' : 'text-slate-900'\">Montant</label>\n            <div class=\"relative\">\n              <Input\n                  v-model=\"editedMovement.amount\"\n                  type=\"number\"\n                  placeholder=\"0.00\"\n                  class=\"pl-8\"\n                  :class=\"[\n                  isDarkMode ? 'bg-gray-800 border-gray-700 text-white' : 'bg-white border-slate-200'\n                ]\"\n              />\n              <span class=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-500\">€</span>\n            </div>\n          </div>\n\n          <div class=\"space-y-1 sm:space-y-2\">\n            <label :class=\"isDarkMode ? 'text-white' : 'text-slate-900'\">Date</label>\n            <Input\n                v-model=\"dateString\"\n                type=\"date\"\n                :class=\"[\n                isDarkMode ? 'bg-gray-800 border-gray-700 text-white' : 'bg-white border-slate-200'\n              ]\"\n            />\n          </div>\n\n          <div class=\"space-y-1 sm:space-y-2\">\n            <label :class=\"isDarkMode ? 'text-white' : 'text-slate-900'\">Image (optionnel)</label>\n            <div class=\"flex flex-wrap items-center gap-2\">\n              <input\n                  type=\"file\"\n                  id=\"image\"\n                  accept=\"image/*\"\n                  @change=\"handleImageUpload\"\n                  class=\"hidden\"\n                  ref=\"fileInput\"\n              />\n              <button\n                  type=\"button\"\n                  @click=\"$refs.fileInput.click()\"\n                  :class=\"[\n                  'px-3 py-2 rounded-md flex items-center gap-1 text-sm sm:text-base',\n                  isDarkMode ? 'bg-gray-800 hover:bg-gray-700 text-white' : 'bg-gray-100 hover:bg-gray-200 text-gray-700'\n                ]\"\n              >\n                <span>Choisir une image</span>\n              </button>\n              <span class=\"text-sm\" :class=\"isDarkMode ? 'text-gray-400' : 'text-gray-500'\">\n                {{ imageFileName || 'Aucun fichier sélectionné' }}\n              </span>\n            </div>\n\n            <div v-if=\"previewUrl\" class=\"mt-2 relative\">\n              <img :src=\"previewUrl\" alt=\"Prévisualisation\" class=\"h-24 w-auto object-cover rounded-md\" />\n              <button\n                  type=\"button\"\n                  @click=\"removeImage\"\n                  class=\"absolute top-1 right-1 bg-red-500 text-white rounded-full \"\n              >\n                <span class=\"items-center justify-center\"><CircleX/></span>\n              </button>\n            </div>\n\n            <div v-else-if=\"editedMovement.imageUrl && editedMovement.imageUrl.length > 0\" class=\"mt-2 relative\">\n              <img :src=\"editedMovement.imageUrl\" alt=\"Image actuelle\" class=\"h-24 w-auto object-cover rounded-md\" />\n              <button\n                  type=\"button\"\n                  @click=\"removeCurrentImage\"\n                  class=\"absolute top-1 right-1 bg-red-500 text-white rounded-full \"\n              >\n                <span class=\"items-center justify-center\"><CircleX/></span>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"space-y-2 sm:space-y-3\">\n          <label :class=\"[\n            'text-sm font-medium',\n            isDarkMode ? 'text-white' : 'text-slate-900'\n          ]\">\n            Type de récurrence\n          </label>\n          <div class=\"grid grid-cols-1 gap-2\">\n            <Button\n                variant=\"outline\"\n                :class=\"[\n                'justify-start py-1 sm:py-2 text-sm sm:text-base',\n                !editedMovement.isRecurrent\n                  ? 'bg-emerald-500 hover:bg-emerald-600 text-white'\n                  : ''\n              ]\"\n                @click=\"editedMovement.isRecurrent = false\"\n            >\n              <span class=\"mr-2\">🔄</span> Pas de récurrence\n            </Button>\n            <Button\n                variant=\"outline\"\n                :class=\"[\n                'justify-start py-1 sm:py-2 text-sm sm:text-base',\n                editedMovement.isRecurrent\n                  ? 'bg-emerald-500 hover:bg-emerald-600 text-white'\n                  : ''\n              ]\"\n                @click=\"editedMovement.isRecurrent = true\"\n            >\n              <span class=\"mr-2\">📅</span> Mensuel\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <DialogFooter :class=\"[\n        'sticky bottom-0 z-10 p-4 sm:p-6 border-t flex space-x-2',\n        isDarkMode ? 'border-gray-800 bg-gray-900' : 'border-slate-200 bg-white'\n      ]\">\n        <Button\n            class=\"w-1/2 bg-red-500 hover:bg-red-600 text-white\"\n            @click=\"handleDeleteMovement\"\n        >\n          Supprimer\n        </Button>\n        <Button\n            class=\"w-1/2 bg-emerald-500 hover:bg-emerald-600 text-white\"\n            @click=\"handleSaveMovement\"\n        >\n          Enregistrer\n        </Button>\n      </DialogFooter>\n    </DialogContent>\n  </Dialog>\n</template>\n\n<script setup lang=\"ts\">\n  import type { Movement } from '@/types/finance';\n  import {\n    Dialog,\n    DialogContent,\n    DialogFooter,\n    DialogHeader,\n    DialogTitle\n  } from '@/components/ui/dialog';\n  import { Button } from '@/components/ui/button';\n  import { Input } from '@/components/ui/input';\n  import { CircleX } from 'lucide-vue-next'\n\n  interface EditMovementDialogProps {\n    isOpen: boolean;\n    isDarkMode: boolean;\n    movement: Movement | null;\n  }\n\n  const props = defineProps<EditMovementDialogProps>();\n  const emit = defineEmits(['update:isOpen', 'saveMovement', 'deleteMovement']);\n\n  const fileInput = ref<HTMLInputElement | null>(null);\n  const previewUrl = ref<string>('');\n  const imageFileName = ref<string>('');\n  const imageFile = ref<File | null>(null);\n  const dateString = ref('');\n  const editedMovement = ref<Movement>({\n    id: 0,\n    name: '',\n    amount: 0,\n    date: new Date(),\n    type: 'expense',\n    isRecurrent: false,\n    imageUrl: '',\n  });\n\n  watch(() => props.movement, (newMovement) => {\n    if (newMovement) {\n      editedMovement.value = { ...newMovement };\n\n      const date = new Date(newMovement.date);\n      if (!isNaN(date.getTime())) {\n        dateString.value = date.toISOString().split('T')[0];\n      }\n\n      previewUrl.value = '';\n      imageFileName.value = '';\n      imageFile.value = null;\n    }\n  }, { immediate: true });\n\n  watch(dateString, (newValue) => {\n    if (newValue) {\n      editedMovement.value.date = new Date(newValue);\n    }\n  });\n\n  const handleImageUpload = (event: Event) => {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n      imageFile.value = file;\n      imageFileName.value = file.name;\n\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        if (e.target) {\n          previewUrl.value = e.target.result as string;\n          editedMovement.value.imageUrl = '';\n        }\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const removeImage = () => {\n    previewUrl.value = '';\n    imageFileName.value = '';\n    imageFile.value = null;\n    if (fileInput.value) {\n      fileInput.value.value = '';\n    }\n  };\n\n  const removeCurrentImage = () => {\n    editedMovement.value.imageUrl = '';\n  };\n\n  const handleSaveMovement = () => {\n    if (!editedMovement.value.name || !editedMovement.value.amount || !editedMovement.value.date) {\n      return;\n    }\n\n    const updatedMovement = { ...editedMovement.value };\n\n    if (previewUrl.value && previewUrl.value.length > 0) {\n      updatedMovement.imageUrl = previewUrl.value;\n\n      if (updatedMovement.imageUrl.startsWith('blob:')) {\n        console.error('URL Blob détectée, conversion en base64 nécessaire');\n      }\n    }\n\n    emit('saveMovement', updatedMovement);\n\n    removeImage();\n  };\n\n  const handleDeleteMovement = () => {\n    if (props.movement) {\n      emit('deleteMovement', props.movement.id);\n    }\n  };\n</script>","<template>\n  <div :class=\"[\n    'min-h-screen transition-colors duration-300',\n    isDarkMode ? 'dark bg-gray-950' : 'bg-slate-50'\n  ]\">\n    <div class=\"p-6 space-y-6\">\n      <div class=\"flex justify-between items-center\">\n        <div class=\"space-y-1\">\n          <div :class=\"isDarkMode ? 'text-gray-400' : 'text-slate-600'\">\n            {{ formatFullDate(selectedDate) }}\n          </div>\n          <h1 :class=\"[\n            'text-4xl font-bold flex items-center gap-2',\n            isDarkMode ? 'text-white' : 'text-slate-900'\n          ]\">\n            Bonjour,\n            <span>User</span>\n          </h1>\n        </div>\n        <button\n            @click=\"toggleDarkMode\"\n            :class=\"[\n            'rounded-full p-2',\n            isDarkMode ? 'hover:bg-gray-800' : 'hover:bg-slate-200'\n          ]\"\n        >\n          <Sun v-if=\"isDarkMode\" class=\"h-6 w-6 text-yellow-500\" />\n          <Moon v-else class=\"h-6 w-6 text-slate-700\" />\n        </button>\n      </div>\n\n      <ClientOnly>\n        <BalanceCard\n            :movements=\"financeData.movements.value || []\"\n            :selected-month=\"currentMonth\"\n            :is-dark-mode=\"isDarkMode\"\n        />\n      </ClientOnly>\n\n      <ClientOnly>\n        <FinanceCalendar\n            :movements=\"financeData.movements.value || []\"\n            :selected-date=\"selectedDate\"\n            :current-month=\"currentMonth\"\n            :is-dark-mode=\"isDarkMode\"\n            @update:selected-date=\"uiStore.setSelectedDate($event)\"\n            @update:current-month=\"uiStore.setCurrentMonth($event)\"\n        />\n      </ClientOnly>\n\n      <!-- Système de recherche et filtres -->\n      <ClientOnly>\n        <div :class=\"[\n          'rounded-xl overflow-hidden',\n          isDarkMode ? 'bg-gray-900 border-gray-800' : 'bg-white border-gray-200 border'\n        ]\">\n          <div class=\"p-4\">\n            <h2 :class=\"[\n              'text-xl font-semibold mb-4',\n              isDarkMode ? 'text-white' : 'text-gray-900'\n            ]\">\n              Mouvements\n            </h2>\n            \n            <!-- Composant de filtres -->\n            <MovementFilters\n              v-if=\"movementFilters\"\n              :filters=\"movementFilters.filters?.value || {}\"\n              :filter-stats=\"movementFilters.filterStats?.value || {}\"\n              :search-suggestions=\"movementFilters.searchSuggestions?.value || []\"\n              :has-active-filters=\"movementFilters.hasActiveFilters?.value || false\"\n              :search-query=\"movementFilters.filters?.value?.searchQuery || ''\"\n              :set-search-query=\"movementFilters.setSearchQuery\"\n              :set-category-ids=\"movementFilters.setCategoryIds\"\n              :set-tag-ids=\"movementFilters.setTagIds\"\n              :set-date-range=\"movementFilters.setDateRange\"\n              :set-amount-range=\"movementFilters.setAmountRange\"\n              :clear-all-filters=\"movementFilters.clearAllFilters\"\n              :clear-filter=\"movementFilters.clearFilter\"\n              :quick-filters=\"movementFilters.quickFilters\"\n            />\n          </div>\n          \n          <!-- Liste des mouvements filtrés -->\n          <div class=\"divide-y\" :class=\"isDarkMode ? 'divide-gray-800' : 'divide-gray-100'\">\n            <div v-for=\"movement in filteredMovementsForDisplay\" :key=\"movement.id\" class=\"p-4 flex items-center gap-3\">\n              <div\n                  :class=\"[\n                  'w-10 h-10 rounded-full flex-shrink-0 flex items-center justify-center relative',\n                  movement.type === 'income' ? 'bg-green-100' : 'bg-red-100',\n                  isDarkMode && movement.type === 'income' ? 'bg-green-800' : '',\n                  isDarkMode && movement.type === 'expense' ? 'bg-red-800' : ''\n                ]\"\n              >\n                <img\n                    v-if=\"movement.imageUrl && movement.imageUrl.length > 0\"\n                    :src=\"movement.imageUrl\"\n                    alt=\"\"\n                    class=\"w-full h-full object-cover rounded-full cursor-pointer\"\n                    @click=\"openImagePreview(movement.imageUrl)\"\n                />\n                <ArrowDownCircle v-else-if=\"movement.type === 'expense'\" class=\"w-6 h-6\" :class=\"isDarkMode ? 'text-red-200' : 'text-red-500'\" />\n                <ArrowUpCircle v-else class=\"w-6 h-6\" :class=\"isDarkMode ? 'text-green-200' : 'text-green-500'\" />\n\n                <div v-if=\"movement.isRecurrent || movement.isGeneratedRecurrence\"\n                     class=\"absolute -top-1 -right-1 w-4 h-4 bg-amber-400 rounded-full flex items-center justify-center\">\n                  <Repeat class=\"w-3 h-3 text-white\" />\n                </div>\n              </div>\n\n              <div class=\"flex-1\">\n                <div :class=\"[\n                  isDarkMode ? 'text-white' : 'text-gray-900',\n                  'flex items-center gap-1'\n                ]\">\n                  {{ movement.name }}\n                  <span v-if=\"movement.isRecurrent || movement.isGeneratedRecurrence\"\n                        class=\"text-xs px-1.5 py-0.5 rounded-full\"\n                        :class=\"isDarkMode ? 'bg-gray-800 text-gray-400' : 'bg-gray-200 text-gray-600'\">\n                    Récurrent\n                  </span>\n                </div>\n                <div class=\"text-sm\" :class=\"isDarkMode ? 'text-gray-400' : 'text-gray-500'\">\n                  {{ formatDate(new Date(movement.date)) }} • {{ movement.type === 'expense' ? 'Dépense' : 'Revenu' }}\n                  <span v-if=\"movement.description\" class=\"ml-2\">\n                    • {{ movement.description }}\n                  </span>\n                </div>\n                \n                <!-- Tags du mouvement -->\n                <div v-if=\"movement.tags && movement.tags.length > 0\" class=\"flex flex-wrap gap-1 mt-1\">\n                  <span\n                    v-for=\"tagId in movement.tags\"\n                    :key=\"tagId\"\n                    class=\"inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium\"\n                    :style=\"getTagStyle(tagId)\"\n                  >\n                    {{ getTagName(tagId) }}\n                  </span>\n                </div>\n              </div>\n\n              <div\n                  :class=\"[\n                  'font-semibold',\n                  movement.type === 'income' ? 'text-green-500' : 'text-red-500'\n                ]\"\n              >\n                {{ formatCurrency(movement.amount) }}\n              </div>\n\n              <div v-if=\"!movement.isGeneratedRecurrence\" class=\"flex items-center\">\n                <button\n                    @click=\"editMovement(movement)\"\n                    class=\"p-2 rounded-full\"\n                    :class=\"isDarkMode ? 'hover:bg-gray-800' : 'hover:bg-gray-100'\"\n                >\n                  <Edit3 class=\"h-4 w-4\" :class=\"isDarkMode ? 'text-gray-400' : 'text-gray-600'\" />\n                </button>\n              </div>\n            </div>\n\n            <div v-if=\"filteredMovementsForDisplay.length === 0\" class=\"p-6 text-center\">\n              <div :class=\"isDarkMode ? 'text-gray-400' : 'text-gray-500'\">\n                {{ movementFilters?.hasActiveFilters ? 'Aucun mouvement ne correspond aux filtres' : 'Aucun mouvement trouvé' }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </ClientOnly>\n    </div>\n\n    <!-- Boutons flottants -->\n    <div class=\"fixed bottom-6 right-6 flex flex-col gap-3\">\n      <!-- Bouton statistiques -->\n      <NuxtLink\n        to=\"/stats\"\n        class=\"rounded-full w-12 h-12 shadow-lg bg-blue-500 hover:bg-blue-600 text-white flex items-center justify-center transition-all duration-200 transform hover:scale-105\"\n      >\n        <BarChart3 class=\"h-6 w-6\" />\n      </NuxtLink>\n      \n      <!-- Bouton ajouter mouvement -->\n      <button\n        @click=\"uiStore.openAddDialog()\"\n        class=\"rounded-full w-12 h-12 shadow-lg bg-emerald-500 hover:bg-emerald-600 text-white flex items-center justify-center transition-all duration-200 transform hover:scale-105\"\n      >\n        <Plus class=\"h-6 w-6\" />\n      </button>\n    </div>\n\n\n    <!-- Dialogue d'ajout de mouvement -->\n    <AddMovementDialog\n        :is-open=\"showAddDialog\"\n        :is-dark-mode=\"isDarkMode\"\n        @update:is-open=\"uiStore.closeAddDialog\"\n        @add-movement=\"handleAddMovement\"\n    />\n\n    <!-- Dialogue d'aperçu d'image -->\n    <Dialog :open=\"!!previewImageUrl && previewImageUrl.length > 0\" @update:open=\"previewImageUrl = ''\">\n      <DialogContent :class=\"isDarkMode ? 'dark bg-gray-900' : 'bg-white'\" class=\"max-w-2xl\">\n        <DialogHeader>\n          <DialogTitle :class=\"isDarkMode ? 'text-white' : 'text-gray-900'\">Aperçu de l'image</DialogTitle>\n        </DialogHeader>\n        <div class=\"flex justify-center\">\n          <img :src=\"previewImageUrl\" alt=\"Aperçu\" class=\"max-h-80 max-w-full object-contain\" />\n        </div>\n        <DialogFooter>\n          <Button @click=\"previewImageUrl = ''\">Fermer</Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n\n    <!-- Dialogue d'édition de mouvement -->\n    <EditMovementDialog\n        :is-open=\"showEditDialog\"\n        :is-dark-mode=\"isDarkMode\"\n        :movement=\"selectedMovement\"\n        @update:is-open=\"showEditDialog = $event\"\n        @save-movement=\"handleSaveMovement\"\n        @delete-movement=\"handleDeleteMovement\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { Sun, Moon, Plus, ArrowDownCircle, ArrowUpCircle, Repeat, Edit3, BarChart3 } from 'lucide-vue-next';\n  import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '@/components/ui/dialog';\n  import { Button } from '@/components/ui/button';\n  import type { NewMovement, Movement } from '~/types/finance';\n  import { formatFullDate, formatCurrency, formatDate } from '~/utils/formatters';\n  import { useFinance } from '~/composables/useFinance';\n  import { useMovementFilters } from '~/composables/useMovementFilters';\n  import { useSettingsStore } from '~/stores/settings';\n  import { useUIStore } from '~/stores/ui';\n  import { useCategoriesStore } from '~/stores/categories';\n  import { storeToRefs } from 'pinia';\n  import MovementFilters from '~/components/movements/MovementFilters.vue';\n  import EditMovementDialog from '~/components/edit-movement-dialog/EditMovementDialog.vue';\n\n  // Stores\n  const financeData = useFinance();\n  const settingsStore = useSettingsStore();\n  const uiStore = useUIStore();\n  const categoriesStore = useCategoriesStore();\n  \n  // État réactif depuis les stores\n  const { isDarkMode } = storeToRefs(settingsStore);\n  const { showAddDialog, selectedDate, currentMonth } = storeToRefs(uiStore);\n  \n  // Système de filtres\n  const movementFilters = useMovementFilters(financeData.movements);\n  \n  // État pour la gestion des modales\n  const previewImageUrl = ref<string>('');\n  const showEditDialog = ref(false);\n  const selectedMovement = ref<Movement | null>(null);\n\n  // Computed property pour les mouvements filtrés avec sécurité\n  const filteredMovementsForDisplay = computed(() => {\n    try {\n      if (!movementFilters || !movementFilters.filteredMovements) {\n        return [];\n      }\n      \n      const filtered = movementFilters.filteredMovements;\n      \n      // Si c'est déjà un tableau\n      if (Array.isArray(filtered)) {\n        return filtered.filter(m => m && m.id !== undefined && m.id !== null);\n      }\n      \n      // Si c'est une computed property\n      if (filtered.value && Array.isArray(filtered.value)) {\n        return filtered.value.filter(m => m && m.id !== undefined && m.id !== null);\n      }\n      \n      return [];\n    } catch (error) {\n      console.error('Erreur filtrage mouvements:', error);\n      return [];\n    }\n  });\n  \n  // Initialiser les dates si nécessaire\n  const defaultDate = new Date();\n  if (!selectedDate.value || isNaN(selectedDate.value.getTime())) {\n    uiStore.setSelectedDate(defaultDate);\n  }\n  if (!currentMonth.value || isNaN(currentMonth.value.getTime())) {\n    uiStore.setCurrentMonth(defaultDate);\n  }\n  \n  // Charger les paramètres au démarrage\n  onMounted(() => {\n    settingsStore.loadSettings();\n  });\n\n  const toggleDarkMode = () => {\n    settingsStore.toggleDarkMode();\n  };\n\n  const handleAddMovement = async (newMovement: NewMovement) => {\n    const success = await financeData.addMovement(newMovement);\n    if (success) {\n      uiStore.closeAddDialog();\n    }\n  };\n\n  const handleMovementUpdated = () => {\n    // Plus besoin de forcer le re-render avec Pinia\n    // La réactivité est automatique\n  };\n\n  // Fonctions pour les tags\n  const getTagName = (tagId: string) => {\n    const tag = categoriesStore.getTagById(tagId);\n    return tag?.name || 'Tag inconnu';\n  };\n\n  const getTagStyle = (tagId: string) => {\n    const tag = categoriesStore.getTagById(tagId);\n    if (!tag) return {};\n    \n    return {\n      backgroundColor: `${tag.color}20`,\n      color: tag.color,\n      border: `1px solid ${tag.color}40`\n    };\n  };\n\n  // Fonctions pour les images\n  const openImagePreview = (url: string) => {\n    if (url && url.length > 0 && !url.startsWith('blob:')) {\n      previewImageUrl.value = url;\n    } else {\n      console.error('URL d\\'image invalide:', url);\n    }\n  };\n\n  // Fonctions pour l'édition\n  const editMovement = (movement: Movement) => {\n    if (movement.isGeneratedRecurrence) {\n      return;\n    }\n\n    selectedMovement.value = movement;\n    showEditDialog.value = true;\n  };\n\n  const handleSaveMovement = (updatedMovement: Movement) => {\n    if (financeData.updateMovement(updatedMovement)) {\n      showEditDialog.value = false;\n      selectedMovement.value = null;\n    }\n  };\n\n  const handleDeleteMovement = (id: number) => {\n    financeData.deleteMovement(id);\n    showEditDialog.value = false;\n    selectedMovement.value = null;\n  };\n</script>"],"version":3}